{
  "version": 3,
  "sources": ["../../../../../apps/scrollable_table/scrollable_table/public/js/grid_row_form.js", "../../../../../apps/scrollable_table/scrollable_table/public/js/grid_row.js", "../../../../../apps/scrollable_table/scrollable_table/public/js/grid_pagination.js", "../../../../../apps/scrollable_table/scrollable_table/public/js/grid.js", "../../../../../apps/scrollable_table/scrollable_table/public/js/updated_gridview.bundle.js"],
  "sourcesContent": ["export default class GridRowForm {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.wrapper = $('<div class=\"form-in-grid\"></div>').appendTo(this.row.wrapper);\n\t}\n\trender() {\n\t\tvar me = this;\n\t\tthis.make_form();\n\t\tthis.form_area.empty();\n\t\tfrappe.utils.scroll_to(0, false, 0, this.wrapper.find(\".grid-form-body\"));\n\n\t\tthis.layout = new frappe.ui.form.Layout({\n\t\t\tfields: this.row.docfields,\n\t\t\tbody: this.form_area,\n\t\t\tno_submit_on_enter: true,\n\t\t\tfrm: this.row.frm,\n\t\t\tgrid: this.row.grid,\n\t\t\tgrid_row: this.row,\n\t\t\tgrid_row_form: this,\n\t\t});\n\t\tthis.layout.make();\n\n\t\tthis.fields = this.layout.fields;\n\t\tthis.fields_dict = this.layout.fields_dict;\n\n\t\tthis.layout.refresh(this.row.doc);\n\n\t\t// copy get_query to fields\n\t\tfor (var fieldname in this.row.grid.fieldinfo || {}) {\n\t\t\tvar fi = this.row.grid.fieldinfo[fieldname];\n\t\t\t$.extend(me.fields_dict[fieldname], fi);\n\t\t}\n\n\t\tthis.toggle_add_delete_button_display(this.wrapper);\n\n\t\tthis.row.grid.open_grid_row = this;\n\n\t\tthis.set_focus();\n\t}\n\tmake_form() {\n\t\tif (!this.form_area) {\n\t\t\tlet template = `<div class=\"grid-form-heading\">\n\t\t\t\t<div class=\"toolbar grid-header-toolbar\">\n\t\t\t\t\t<span class=\"panel-title\">\n\t\t\t\t\t\t${__(\"Editing Row\")} #<span class=\"grid-form-row-index\"></span></span>\n\t\t\t\t\t<span class=\"row-actions\">\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-collapse-row\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"down\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-move-row hidden-xs\">\n\t\t\t\t\t\t\t${__(\"Move\")}</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-duplicate-row hidden-xs\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"duplicate\")}\n\t\t\t\t\t\t\t${__(\"Duplicate\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-insert-row hidden-xs\">\n\t\t\t\t\t\t\t${__(\"Insert Above\")}</button>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-insert-row-below hidden-xs\">\n\t\t\t\t\t\t\t${__(\"Insert Below\")}</button>\n\t\t\t\t\t\t<button class=\"btn btn-danger btn-sm pull-right grid-delete-row\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"grid-form-body\">\n\t\t\t\t<div class=\"form-area\"></div>\n\t\t\t\t<div class=\"grid-footer-toolbar hidden-xs flex justify-between\">\n\t\t\t\t\t<div class=\"grid-shortcuts\">\n\t\t\t\t\t\t<span> ${frappe.utils.icon(\"keyboard\", \"md\")} </span>\n\t\t\t\t\t\t<span class=\"text-medium\"> ${__(\"Shortcuts\")}: </span>\n\t\t\t\t\t\t<kbd>${__(\"Ctrl + Up\")}</kbd> . <kbd>${__(\"Ctrl + Down\")}</kbd> . <kbd>${__(\"ESC\")}</kbd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"row-actions\">\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-sm pull-right grid-append-row\">\n\t\t\t\t\t\t\t${__(\"Insert Below\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>`;\n\n\t\t\t$(template).appendTo(this.wrapper);\n\t\t\tthis.form_area = this.wrapper.find(\".form-area\");\n\t\t\tthis.row.set_row_index();\n\t\t\tthis.set_form_events();\n\t\t}\n\t}\n\tset_form_events() {\n\t\tvar me = this;\n\t\tthis.wrapper.find(\".grid-delete-row\").on(\"click\", function () {\n\t\t\tme.row.remove();\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-insert-row\").on(\"click\", function () {\n\t\t\tme.row.insert(true);\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-insert-row-below\").on(\"click\", function () {\n\t\t\tme.row.insert(true, true);\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-duplicate-row\").on(\"click\", function () {\n\t\t\tme.row.insert(true, true, true);\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-move-row\").on(\"click\", function () {\n\t\t\tme.row.move();\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-append-row\").on(\"click\", function () {\n\t\t\tme.row.toggle_view(false);\n\t\t\tme.row.grid.add_new_row(me.row.doc.idx + 1, null, true);\n\t\t\treturn false;\n\t\t});\n\t\tthis.wrapper.find(\".grid-form-heading, .grid-footer-toolbar\").on(\"click\", function () {\n\t\t\tme.row.toggle_view();\n\t\t\treturn false;\n\t\t});\n\t}\n\ttoggle_add_delete_button_display($parent) {\n\t\t$parent.find(\".row-actions, .grid-append-row\").toggle(this.row.grid.is_editable());\n\t}\n\trefresh_field(fieldname) {\n\t\tconst field = this.fields_dict[fieldname];\n\t\tif (!field) return;\n\n\t\tfield.docname = this.row.doc.name;\n\t\tfield.refresh();\n\t\tthis.layout && this.layout.refresh_dependency();\n\t}\n\tset_focus() {\n\t\t// wait for animation and then focus on the first row\n\t\tvar me = this;\n\t\tsetTimeout(function () {\n\t\t\tif ((me.row.frm && me.row.frm.doc.docstatus === 0) || !me.row.frm) {\n\t\t\t\tvar first = me.form_area.find(\"input:first\");\n\t\t\t\tif (\n\t\t\t\t\tfirst.length &&\n\t\t\t\t\t![\"Date\", \"Datetime\", \"Time\"].includes(first.attr(\"data-fieldtype\"))\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfirst.get(0).focus();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t//\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 500);\n\t}\n}", "import GridRowForm from \"./grid_row_form\";\n\nexport default class GridRow {\n\tconstructor(opts) {\n\t\tthis.on_grid_fields_dict = {};\n\t\tthis.on_grid_fields = [];\n\t\t$.extend(this, opts);\n\t\tthis.set_docfields();\n\t\tthis.columns = {};\n\t\tthis.columns_list = [];\n\t\tthis.row_check_html = '<input type=\"checkbox\" class=\"grid-row-check\">';\n\t\tthis.make();\n\t}\n\tmake() {\n\t\tlet me = this;\n\t\tlet render_row = true;\n\n\t\tthis.wrapper = $('<div class=\"grid-row\"></div>');\n\t\tthis.row = $('<div class=\"data-row row m-0\"></div>')\n\t\t\t.appendTo(this.wrapper)\n\t\t\t.on(\"click\", function (e) {\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).hasClass(\"grid-row-check\") ||\n\t\t\t\t\t$(e.target).hasClass(\"row-index\") ||\n\t\t\t\t\t$(e.target).parent().hasClass(\"row-index\")\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (me.grid.allow_on_grid_editing() && me.grid.is_editable()) {\n\t\t\t\t\t// pass\n\t\t\t\t} else {\n\t\t\t\t\tme.toggle_view();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (this.grid.template && !this.grid.meta.editable_grid) {\n\t\t\tthis.render_template();\n\t\t} else {\n\t\t\trender_row = this.render_row();\n\t\t}\n\n\t\tif (!render_row) return;\n\n\t\tthis.set_data();\n\t\tthis.wrapper.appendTo(this.parent);\n\t}\n\n\tset_docfields(update = false) {\n\t\tif (this.doc && this.parent_df.options) {\n\t\t\tfrappe.meta.make_docfield_copy_for(\n\t\t\t\tthis.parent_df.options,\n\t\t\t\tthis.doc.name,\n\t\t\t\tthis.docfields\n\t\t\t);\n\t\t\tconst docfields = frappe.meta.get_docfields(this.parent_df.options, this.doc.name);\n\t\t\tif (update) {\n\t\t\t\t// to maintain references\n\t\t\t\tthis.docfields.forEach((df) => {\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\tdf,\n\t\t\t\t\t\tdocfields.find((d) => d.fieldname === df.fieldname)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.docfields = docfields;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_data() {\n\t\tthis.wrapper.data({\n\t\t\tgrid_row: this,\n\t\t\tdoc: this.doc || \"\",\n\t\t});\n\t}\n\tset_row_index() {\n\t\tif (this.doc) {\n\t\t\tthis.wrapper\n\t\t\t\t.attr(\"data-name\", this.doc.name)\n\t\t\t\t.attr(\"data-idx\", this.doc.idx)\n\t\t\t\t.find(\".row-index span, .grid-form-row-index\")\n\t\t\t\t.html(this.doc.idx);\n\t\t}\n\t}\n\tselect(checked) {\n\t\tthis.doc.__checked = checked ? 1 : 0;\n\t}\n\trefresh_check() {\n\t\tthis.wrapper\n\t\t\t.find(\".grid-row-check\")\n\t\t\t.prop(\"checked\", this.doc ? !!this.doc.__checked : false);\n\t\tthis.grid.debounced_refresh_remove_rows_button();\n\t}\n\tremove() {\n\t\tvar me = this;\n\t\tif (this.grid.is_editable()) {\n\t\t\tif (this.get_open_form()) {\n\t\t\t\tthis.hide_form();\n\t\t\t}\n\t\t\tif (this.frm) {\n\t\t\t\tfrappe\n\t\t\t\t\t.run_serially([\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\treturn this.frm.script_manager.trigger(\n\t\t\t\t\t\t\t\t\"before_\" + this.grid.df.fieldname + \"_remove\",\n\t\t\t\t\t\t\t\tthis.doc.doctype,\n\t\t\t\t\t\t\t\tthis.doc.name\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tfrappe.model.clear_doc(this.doc.doctype, this.doc.name);\n\n\t\t\t\t\t\t\tthis.frm.script_manager.trigger(\n\t\t\t\t\t\t\t\tthis.grid.df.fieldname + \"_remove\",\n\t\t\t\t\t\t\t\tthis.doc.doctype,\n\t\t\t\t\t\t\t\tthis.doc.name\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.frm.dirty();\n\t\t\t\t\t\t\tthis.grid.refresh();\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t// aborted\n\t\t\t\t\t\tconsole.trace(e);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet data = null;\n\t\t\t\tif (this.grid.df.get_data) {\n\t\t\t\t\tdata = this.grid.df.get_data();\n\t\t\t\t} else {\n\t\t\t\t\tdata = this.grid.df.data;\n\t\t\t\t}\n\n\t\t\t\tconst index = data.findIndex((d) => d.name === me.doc.name);\n\n\t\t\t\tif (index > -1) {\n\t\t\t\t\t// mutate array directly,\n\t\t\t\t\t// else the object reference will be lost\n\t\t\t\t\tdata.splice(index, 1);\n\t\t\t\t}\n\t\t\t\t// remap idxs\n\t\t\t\tdata.forEach(function (d, i) {\n\t\t\t\t\td.idx = i + 1;\n\t\t\t\t});\n\n\t\t\t\tthis.grid.refresh();\n\t\t\t}\n\t\t}\n\t}\n\tinsert(show, below, duplicate) {\n\t\tvar idx = this.doc.idx;\n\t\tvar copy_doc = duplicate ? this.doc : null;\n\t\tif (below) idx++;\n\t\tthis.toggle_view(false);\n\t\tthis.grid.add_new_row(idx, null, show, copy_doc);\n\t}\n\tmove() {\n\t\t// promopt the user where they want to move this row\n\t\tvar me = this;\n\t\tfrappe.prompt(\n\t\t\t{\n\t\t\t\tfieldname: \"move_to\",\n\t\t\t\tlabel: __(\"Move to Row Number\"),\n\t\t\t\tfieldtype: \"Int\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: this.doc.idx,\n\t\t\t},\n\t\t\tfunction (values) {\n\t\t\t\tif (me.doc._sortable === false) {\n\t\t\t\t\tfrappe.msgprint(__(\"Cannot move row\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// renumber and refresh\n\t\t\t\tlet data = me.grid.get_data();\n\t\t\t\tdata.move(me.doc.idx - 1, values.move_to - 1);\n\t\t\t\tme.frm.dirty();\n\n\t\t\t\t// renum idx\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i].idx = i + 1;\n\t\t\t\t}\n\n\t\t\t\tme.toggle_view(false);\n\t\t\t\tme.grid.refresh();\n\t\t\t\t$(me.frm.wrapper).trigger(\"grid-move-row\", [me.frm, me]);\n\t\t\t},\n\t\t\t__(\"Move To\"),\n\t\t\t\"Update\"\n\t\t);\n\t}\n\trefresh() {\n\t\t// update docfields for new record\n\t\tif (this.frm && this.doc && this.doc.__islocal) {\n\t\t\tthis.set_docfields(true);\n\t\t}\n\n\t\tif (this.frm && this.doc) {\n\t\t\tthis.doc = locals[this.doc.doctype][this.doc.name];\n\t\t}\n\n\t\tif (this.grid.template && !this.grid.meta.editable_grid) {\n\t\t\tthis.render_template();\n\t\t} else {\n\t\t\tthis.render_row(true);\n\t\t}\n\n\t\t// refresh form fields\n\t\tif (this.grid_form) {\n\t\t\tthis.grid_form.layout && this.grid_form.layout.refresh(this.doc);\n\t\t}\n\t}\n\trender_template() {\n\t\tthis.set_row_index();\n\n\t\tif (this.row_display) {\n\t\t\tthis.row_display.remove();\n\t\t}\n\n\t\t// row index\n\t\tif (!this.row_index) {\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"template-row-index\">${this.row_check_html}<span></span></div>`\n\t\t\t).appendTo(this.row);\n\t\t}\n\n\t\tif (this.doc) {\n\t\t\tthis.row_index.find(\"span\").html(this.doc.idx);\n\t\t}\n\n\t\tthis.row_display = $('<div class=\"row-data sortable-handle template-row\"></div>')\n\t\t\t.appendTo(this.row)\n\t\t\t.html(\n\t\t\t\tfrappe.render(this.grid.template, {\n\t\t\t\t\tdoc: this.doc ? frappe.get_format_helper(this.doc) : null,\n\t\t\t\t\tfrm: this.frm,\n\t\t\t\t\trow: this,\n\t\t\t\t})\n\t\t\t);\n\t}\n\trender_row(refresh) {\n\t\tif (this.show_search && !this.show_search_row()) return;\n\n\t\tlet me = this;\n\t\tthis.set_row_index();\n\n\t\t// index (1, 2, 3 etc)\n\t\tif (!this.row_index && !this.show_search) {\n\t\t\tconst txt = this.doc\n\t\t\t\t? this.doc.idx\n\t\t\t\t: __(\"No.\", null, \"Title of the 'row number' column\");\n\n\t\t\tthis.row_check = $(\n\t\t\t\t`<div class=\"row-check sortable-handle col\">\n\t\t\t\t\t${this.row_check_html}\n\t\t\t\t</div>`\n\t\t\t).appendTo(this.row);\n\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"row-index sortable-handle col\">\n\t\t\t\t\t<span>${txt}</span>\n\t\t\t\t</div>`\n\t\t\t)\n\t\t\t\t.appendTo(this.row)\n\t\t\t\t.on(\"click\", function (e) {\n\t\t\t\t\tif (!$(e.target).hasClass(\"grid-row-check\")) {\n\t\t\t\t\t\tme.toggle_view();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (this.show_search) {\n\t\t\tthis.row_check = $(`<div class=\"row-check col search\"></div>`).appendTo(this.row);\n\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"row-index col search\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-xs text-center\" >\n\t\t\t\t</div>`\n\t\t\t).appendTo(this.row);\n\n\t\t\tthis.row_index.find(\"input\").on(\n\t\t\t\t\"keyup\",\n\t\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\t\tlet df = {\n\t\t\t\t\t\tfieldtype: \"Sr No\",\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.grid.filter[\"row-index\"] = {\n\t\t\t\t\t\tdf: df,\n\t\t\t\t\t\tvalue: e.target.value,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (e.target.value == \"\") {\n\t\t\t\t\t\tdelete this.grid.filter[\"row-index\"];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.grid.grid_sortable.option(\n\t\t\t\t\t\t\"disabled\",\n\t\t\t\t\t\tObject.keys(this.grid.filter).length !== 0\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.grid.prevent_build = true;\n\t\t\t\t\tme.grid.refresh();\n\t\t\t\t\tthis.grid.prevent_build = false;\n\t\t\t\t}, 500)\n\t\t\t);\n\t\t\tfrappe.utils.only_allow_num_decimal(this.row_index.find(\"input\"));\n\t\t}\n\n\t\tthis.setup_columns();\n\t\tthis.add_open_form_button();\n\t\tthis.add_column_configure_button();\n\t\tthis.refresh_check();\n\n\t\tif (this.frm && this.doc) {\n\t\t\t$(this.frm.wrapper).trigger(\"grid-row-render\", [this]);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tmake_editable() {\n\t\tthis.row.toggleClass(\"editable-row\", this.grid.is_editable());\n\t}\n\n\tis_too_small() {\n\t\treturn this.row.width() ? this.row.width() < 300 : false;\n\t}\n\n\tadd_open_form_button() {\n\t\tvar me = this;\n\t\tif (this.doc && !this.grid.df.in_place_edit) {\n\t\t\t// remove row\n\t\t\tif (!this.open_form_button) {\n\t\t\t\tthis.open_form_button = $('<div class=\"col\"></div>').appendTo(this.row);\n\n\t\t\t\tif (!this.configure_columns) {\n\t\t\t\t\tconst edit_msg = __(\"Edit\", \"\", \"Edit grid row\");\n\t\t\t\t\tthis.open_form_button = $(`\n\t\t\t\t\t\t<div class=\"btn-open-row\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"${edit_msg}\">\n\t\t\t\t\t\t\t<a>${frappe.utils.icon(\"edit\", \"xs\")}</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\t\t\t\t\t.appendTo(this.open_form_button)\n\t\t\t\t\t\t.on(\"click\", function () {\n\t\t\t\t\t\t\tme.toggle_view();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tthis.open_form_button.tooltip({ delay: { show: 600, hide: 100 } });\n\t\t\t\t}\n\n\t\t\t\tif (this.is_too_small()) {\n\t\t\t\t\t// narrow\n\t\t\t\t\tthis.open_form_button.css({ \"margin-right\": \"-2px\" });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_column_configure_button() {\n\t\tif (this.grid.df.in_place_edit && !this.frm) return;\n\n\t\tif (this.configure_columns && this.frm) {\n\t\t\tthis.configure_columns_button = $(`\n\t\t\t\t<div class=\"col grid-static-col pointer\">\n\t\t\t\t\t<a>${frappe.utils.icon(\"setting-gear\", \"sm\", \"\", \"filter: opacity(0.5)\")}</a>\n\t\t\t\t</div>\n\t\t\t`)\n\t\t\t\t.appendTo(this.row)\n\t\t\t\t.on(\"click\", () => {\n\t\t\t\t\tthis.configure_dialog_for_columns_selector();\n\t\t\t\t});\n\t\t} else if (this.configure_columns && !this.frm) {\n\t\t\tthis.configure_columns_button = $(`\n\t\t\t\t<div class=\"col grid-static-col\"></div>\n\t\t\t`).appendTo(this.row);\n\t\t}\n\t}\n\n\tconfigure_dialog_for_columns_selector() {\n\t\tthis.grid_settings_dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Configure Columns\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.grid.setup_visible_columns();\n\t\tthis.setup_columns_for_dialog();\n\t\tthis.prepare_wrapper_for_columns();\n\t\tthis.render_selected_columns();\n\t\tthis.grid_settings_dialog.show();\n\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".add-new-fields\")\n\t\t\t.click(() => {\n\t\t\t\tthis.column_selector_for_dialog();\n\t\t\t});\n\n\t\tthis.grid_settings_dialog.set_primary_action(__(\"Update\"), () => {\n\t\t\tthis.columns = {};\n\t\t\tthis.update_user_settings_for_grid();\n\t\t\tthis.grid_settings_dialog.hide();\n\t\t});\n\n\t\tthis.grid_settings_dialog.set_secondary_action_label(__(\"Reset to default\"));\n\t\tthis.grid_settings_dialog.set_secondary_action(() => {\n\t\t\tthis.reset_user_settings_for_grid();\n\t\t\tthis.grid_settings_dialog.hide();\n\t\t});\n\t}\n\n\tsetup_columns_for_dialog() {\n\t\tthis.selected_columns_for_grid = [];\n\t\tthis.grid.visible_columns.forEach((row) => {\n\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\tfieldname: row[0].fieldname,\n\t\t\t\tcolumns: row[0].columns || row[0].colsize,\n\t\t\t});\n\t\t});\n\t}\n\n\tprepare_wrapper_for_columns() {\n\t\tthis.fields_html_wrapper = this.grid_settings_dialog.get_field(\"fields_html\").$wrapper[0];\n\n\t\t$(`\n\t\t\t<div class='form-group'>\n\t\t\t\t<div class='row' style='margin:0px; margin-bottom:10px;'>\n\t\t\t\t\t<div class='col-6 col-md-8'>\n\t\t\t\t\t\t${__(\"Fieldname\").bold()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-6 col-md-4' style='padding-left:5px;'>\n\t\t\t\t\t\t${__(\"Column Width\").bold()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='control-input-wrapper selected-fields'>\n\t\t\t\t</div>\n\t\t\t\t<p class='help-box small text-muted'>\n\t\t\t\t\t<a class='add-new-fields text-muted'>\n\t\t\t\t\t\t+ ${__(\"Add / Remove Columns\")}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`).appendTo(this.fields_html_wrapper);\n\t}\n\n\tcolumn_selector_for_dialog() {\n\t\tlet docfields = this.prepare_columns_for_dialog(\n\t\t\tthis.selected_columns_for_grid.map((field) => field.fieldname)\n\t\t);\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.grid.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: docfields,\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t\tsort_options: false,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\td.set_primary_action(__(\"Add\"), () => {\n\t\t\tlet selected_fields = d.get_values().fields;\n\t\t\tthis.selected_columns_for_grid = [];\n\t\t\tif (selected_fields) {\n\t\t\t\tselected_fields.forEach((selected_column) => {\n\t\t\t\t\tlet docfield = frappe.meta.get_docfield(this.grid.doctype, selected_column);\n\t\t\t\t\tthis.grid.update_default_colsize(docfield);\n\n\t\t\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\t\t\tfieldname: selected_column,\n\t\t\t\t\t\tcolumns: docfield.columns || docfield.colsize,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.render_selected_columns();\n\t\t\t\td.hide();\n\t\t\t}\n\t\t});\n\n\t\td.show();\n\t}\n\n\tprepare_columns_for_dialog(selected_fields) {\n\t\tlet fields = [];\n\n\t\tconst blocked_fields = frappe.model.no_value_type;\n\t\tconst always_allow = [\"Button\"];\n\n\t\tconst show_field = (f) => always_allow.includes(f) || !blocked_fields.includes(f);\n\n\t\t// First, add selected fields\n\t\tselected_fields.forEach((selectedField) => {\n\t\t\tconst selectedColumn = this.docfields.find(\n\t\t\t\t(column) => column.fieldname === selectedField\n\t\t\t);\n\t\t\tif (selectedColumn && !selectedColumn.hidden && show_field(selectedColumn.fieldtype)) {\n\t\t\t\tfields.push({\n\t\t\t\t\tlabel: __(selectedColumn.label, null, this.grid.doctype),\n\t\t\t\t\tvalue: selectedColumn.fieldname,\n\t\t\t\t\tchecked: true,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Then, add the rest of the fields\n\t\tthis.docfields.forEach((column) => {\n\t\t\tif (\n\t\t\t\t!selected_fields.includes(column.fieldname) &&\n\t\t\t\t!column.hidden &&\n\t\t\t\tshow_field(column.fieldtype)\n\t\t\t) {\n\t\t\t\tfields.push({\n\t\t\t\t\tlabel: __(column.label, null, this.grid.doctype),\n\t\t\t\t\tvalue: column.fieldname,\n\t\t\t\t\tchecked: false,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn fields;\n\t}\n\n\trender_selected_columns() {\n\t\tlet fields = \"\";\n\t\tif (this.selected_columns_for_grid) {\n\t\t\tthis.selected_columns_for_grid.forEach((d) => {\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.grid.doctype, d.fieldname);\n\n\t\t\t\tfields += `\n\t\t\t\t\t<div class='control-input flex align-center form-control fields_order sortable-handle sortable'\n\t\t\t\t\t\tstyle='display: block; margin-bottom: 5px; padding: 0 8px; cursor: pointer; height: 32px;' data-fieldname='${\n\t\t\t\t\t\t\tdocfield.fieldname\n\t\t\t\t\t\t}'\n\t\t\t\t\t\tdata-label='${docfield.label}' data-type='${docfield.fieldtype}'>\n\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-1' style='padding-top: 4px;'>\n\t\t\t\t\t\t\t\t<a style='cursor: grabbing;'>${frappe.utils.icon(\"drag\", \"xs\")}</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-6 col-md-8' style='padding-right:0px; padding-top: 5px;'>\n\t\t\t\t\t\t\t\t${__(docfield.label, null, docfield.parent)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-3 col-md-2' style='padding-left:0px; padding-top: 2px; margin-top:-2px;' title='${__(\n\t\t\t\t\t\t\t\t\"Columns\"\n\t\t\t\t\t\t\t)}'>\n\t\t\t\t\t\t\t\t<input class='form-control column-width my-1 input-xs text-right'\n\t\t\t\t\t\t\t\tstyle='height: 24px; max-width: 80px; background: var(--bg-color);'\n\t\t\t\t\t\t\t\t\tvalue='${docfield.columns || cint(d.columns)}'\n\t\t\t\t\t\t\t\t\tdata-fieldname='${docfield.fieldname}' style='background-color: var(--modal-bg); display: inline'>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-1' style='padding-top: 3px;'>\n\t\t\t\t\t\t\t\t<a class='text-muted remove-field' data-fieldname='${docfield.fieldname}'>\n\t\t\t\t\t\t\t\t\t<i class='fa fa-trash-o' aria-hidden='true'></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t});\n\t\t}\n\n\t\t$(this.fields_html_wrapper).find(\".selected-fields\").html(fields);\n\n\t\tthis.prepare_handler_for_sort();\n\t\tthis.select_on_focus();\n\t\tthis.update_column_width();\n\t\tthis.remove_selected_column();\n\t}\n\n\tprepare_handler_for_sort() {\n\t\tnew Sortable($(this.fields_html_wrapper).find(\".selected-fields\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: () => {\n\t\t\t\tthis.sort_columns();\n\t\t\t},\n\t\t});\n\t}\n\n\tsort_columns() {\n\t\tthis.selected_columns_for_grid = [];\n\n\t\tlet columns = $(this.fields_html_wrapper).find(\".fields_order\") || [];\n\t\tcolumns.each((idx) => {\n\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\tfieldname: $(columns[idx]).attr(\"data-fieldname\"),\n\t\t\t\tcolumns: cint($(columns[idx]).find(\".column-width\").attr(\"value\")),\n\t\t\t});\n\t\t});\n\t}\n\n\tselect_on_focus() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".column-width\")\n\t\t\t.click((event) => {\n\t\t\t\t$(event.target).select();\n\t\t\t});\n\t}\n\n\tupdate_column_width() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".column-width\")\n\t\t\t.change((event) => {\n\t\t\t\tif (cint(event.target.value) === 0) {\n\t\t\t\t\tevent.target.value = cint(event.target.defaultValue);\n\t\t\t\t\tfrappe.throw(__(\"Column width cannot be zero.\"));\n\t\t\t\t}\n\n\t\t\t\tthis.selected_columns_for_grid.forEach((row) => {\n\t\t\t\t\tif (row.fieldname === event.target.dataset.fieldname) {\n\t\t\t\t\t\trow.columns = cint(event.target.value);\n\t\t\t\t\t\tevent.target.defaultValue = cint(event.target.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tremove_selected_column() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".remove-field\")\n\t\t\t.click((event) => {\n\t\t\t\tlet fieldname = event.currentTarget.dataset.fieldname;\n\t\t\t\tlet selected_columns_for_grid = this.selected_columns_for_grid.filter((row) => {\n\t\t\t\t\treturn row.fieldname !== fieldname;\n\t\t\t\t});\n\n\t\t\t\tif (selected_columns_for_grid && selected_columns_for_grid.length === 0) {\n\t\t\t\t\tfrappe.throw(__(\"At least one column is required to show in the grid.\"));\n\t\t\t\t}\n\n\t\t\t\tthis.selected_columns_for_grid = selected_columns_for_grid;\n\t\t\t\t$(this.fields_html_wrapper).find(`[data-fieldname=\"${fieldname}\"]`).remove();\n\t\t\t});\n\t}\n\n\tupdate_user_settings_for_grid() {\n\t\tif (!this.selected_columns_for_grid || !this.frm) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value = {};\n\t\tvalue[this.grid.doctype] = this.selected_columns_for_grid;\n\t\tfrappe.model.user_settings.save(this.frm.doctype, \"GridView\", value).then((r) => {\n\t\t\tfrappe.model.user_settings[this.frm.doctype] = r.message || r;\n\t\t\tthis.grid.reset_grid();\n\t\t});\n\t}\n\n\treset_user_settings_for_grid() {\n\t\tfrappe.model.user_settings.save(this.frm.doctype, \"GridView\", null).then((r) => {\n\t\t\tfrappe.model.user_settings[this.frm.doctype] = r.message || r;\n\t\t\tthis.grid.reset_grid();\n\t\t});\n\t}\n\n\tsetup_columns() {\n\t\tthis.focus_set = false;\n\t\tthis.search_columns = {};\n\n\t\tthis.grid.setup_visible_columns();\n\t\tlet fields =\n\t\t\tthis.grid.user_defined_columns && this.grid.user_defined_columns.length > 0\n\t\t\t\t? this.grid.user_defined_columns\n\t\t\t\t: this.docfields;\n\n\t\tlet total_colsize = 0;\n\n\t\tthis.grid.visible_columns.forEach((col, ci) => {\n\t\t\t// to get update df for the row\n\t\t\tlet df = fields.find((field) => field?.fieldname === col[0].fieldname);\n\n\t\t\tthis.set_dependant_property(df);\n\n\t\t\tlet colsize = col[1];\n\n\t\t\ttotal_colsize += colsize;\n\t\t\tlet txt = this.doc\n\t\t\t\t? frappe.format(this.doc[df.fieldname], df, null, this.doc)\n\t\t\t\t: __(df.label, null, df.parent);\n\n\t\t\tif (this.doc && df.fieldtype === \"Select\") {\n\t\t\t\ttxt = __(txt);\n\t\t\t}\n\t\t\tlet column;\n\t\t\tif (!this.columns[df.fieldname] && !this.show_search) {\n\t\t\t\tcolumn = this.make_column(df, colsize, txt, ci);\n\t\t\t} else if (!this.columns[df.fieldname] && this.show_search) {\n\t\t\t\tcolumn = this.make_search_column(df, colsize);\n\t\t\t} else {\n\t\t\t\tcolumn = this.columns[df.fieldname];\n\t\t\t\tthis.refresh_field(df.fieldname, txt);\n\t\t\t}\n\n\t\t\t// background color for cell\n\t\t\tif (this.doc) {\n\t\t\t\tif (df.reqd && !txt) {\n\t\t\t\t\tcolumn.addClass(\"error\");\n\t\t\t\t}\n\t\t\t\tif (column.is_invalid) {\n\t\t\t\t\tcolumn.addClass(\"invalid\");\n\t\t\t\t} else if (df.reqd || df.bold) {\n\t\t\t\t\tcolumn.addClass(\"bold\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tlet current_grid = $(\n\t\t\t`div[data-fieldname=\"${this.grid.df.fieldname}\"] .form-grid-container`\n\t\t);\n\t\tlet form_grid = current_grid.find(\".form-grid\");\n\t\tif (form_grid.length) {\n\t\t\tif (this.grid.visible_columns.length * 100 <= 1225) {\n\t\t\t\tform_grid.css(\"width\", \"auto\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tform_grid.css(\"width\", this.grid.visible_columns.length * 100 + 25 + \"px\");\n\t\t\t}\t\t\t\n\t\t}\n\t\tif (total_colsize > 10) {\n\t\t\tcurrent_grid.addClass(\"column-limit-reached\");\n\t\t} else if (current_grid.hasClass(\"column-limit-reached\")) {\n\t\t\tif (Number($(current_grid).children(\".form-grid\").css(\"left\")) != 0) {\n\t\t\t\t$(current_grid).children(\".form-grid\").css(\"left\", 0);\n\t\t\t\t$(current_grid).children().find(\".grid-scroll-bar\").css({\n\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\"margin-left\": \"0px\",\n\t\t\t\t});\n\t\t\t\t$(current_grid).children().find(\".grid-scroll-bar-rows\").css(\"width\", \"auto\");\n\t\t\t}\n\t\t\tcurrent_grid.removeClass(\"column-limit-reached\");\n\t\t}\n\n\t\tif (this.show_search) {\n\t\t\t// last empty column\n\t\t\t$(`<div class=\"col grid-static-col search\"></div>`).appendTo(this.row);\n\t\t}\n\t}\n\n\tset_dependant_property(df) {\n\t\tif (\n\t\t\t!df.reqd &&\n\t\t\tdf.mandatory_depends_on &&\n\t\t\tthis.evaluate_depends_on_value(df.mandatory_depends_on)\n\t\t) {\n\t\t\tdf.reqd = 1;\n\t\t}\n\n\t\tif (\n\t\t\t!df.read_only &&\n\t\t\tdf.read_only_depends_on &&\n\t\t\tthis.evaluate_depends_on_value(df.read_only_depends_on)\n\t\t) {\n\t\t\tdf.read_only = 1;\n\t\t}\n\t}\n\n\tevaluate_depends_on_value(expression) {\n\t\tlet out = null;\n\t\tlet doc = this.doc;\n\n\t\tif (!doc) return;\n\n\t\tlet parent = this.frm ? this.frm.doc : this.doc || null;\n\n\t\tif (typeof expression === \"boolean\") {\n\t\t\tout = expression;\n\t\t} else if (typeof expression === \"function\") {\n\t\t\tout = expression(doc);\n\t\t} else if (expression.substr(0, 5) == \"eval:\") {\n\t\t\ttry {\n\t\t\t\tout = frappe.utils.eval(expression.substr(5), { doc, parent });\n\t\t\t\tif (parent && parent.istable && expression.includes(\"is_submittable\")) {\n\t\t\t\t\tout = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tfrappe.throw(__('Invalid \"depends_on\" expression'));\n\t\t\t}\n\t\t} else if (expression.substr(0, 3) == \"fn:\" && this.frm) {\n\t\t\tout = this.frm.script_manager.trigger(\n\t\t\t\texpression.substr(3),\n\t\t\t\tthis.doctype,\n\t\t\t\tthis.docname\n\t\t\t);\n\t\t} else {\n\t\t\tvar value = doc[expression];\n\t\t\tif ($.isArray(value)) {\n\t\t\t\tout = !!value.length;\n\t\t\t} else {\n\t\t\t\tout = !!value;\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tshow_search_row() {\n\t\t// show or remove search columns based on grid rows\n\t\tthis.show_search =\n\t\t\tthis.show_search && (this.grid?.data?.length >= 20 || this.grid.filter_applied);\n\t\t!this.show_search && this.wrapper.remove();\n\t\treturn this.show_search;\n\t}\n\n\tmake_search_column(df, colsize) {\n\t\tlet title = \"\";\n\t\tlet input_class = \"\";\n\t\tlet is_disabled = \"\";\n\n\t\tif ([\"Text\", \"Small Text\"].includes(df.fieldtype)) {\n\t\t\tinput_class = \"grid-overflow-no-ellipsis\";\n\t\t} else if ([\"Int\", \"Currency\", \"Float\", \"Percent\"].includes(df.fieldtype)) {\n\t\t\tinput_class = \"text-right\";\n\t\t} else if (df.fieldtype === \"Check\") {\n\t\t\ttitle = __(\"1 = True & 0 = False\");\n\t\t\tinput_class = \"text-center\";\n\t\t} else if (df.fieldtype === \"Password\") {\n\t\t\tis_disabled = \"disabled\";\n\t\t\ttitle = __(\"Password cannot be filtered\");\n\t\t}\n\n\t\tlet $col = $(\n\t\t\t'<div class=\"col grid-static-col col-xs-' + colsize + ' search\"></div>'\n\t\t).appendTo(this.row);\n\n\t\tlet $search_input = $(`\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"form-control input-xs ${input_class}\"\n\t\t\t\ttitle=\"${title}\"\n\t\t\t\tdata-fieldtype=\"${df.fieldtype}\"\n\t\t\t\t${is_disabled}\n\t\t\t>\n\t\t`).appendTo($col);\n\n\t\tthis.search_columns[df.fieldname] = $col;\n\n\t\t$search_input.on(\n\t\t\t\"keyup\",\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tthis.grid.filter[df.fieldname] = {\n\t\t\t\t\tdf: df,\n\t\t\t\t\tvalue: e.target.value,\n\t\t\t\t};\n\n\t\t\t\tif (e.target.value == \"\") {\n\t\t\t\t\tdelete this.grid.filter[df.fieldname];\n\t\t\t\t}\n\n\t\t\t\tif (this.grid.grid_sortable) {\n\t\t\t\t\tthis.grid.grid_sortable.option(\n\t\t\t\t\t\t\"disabled\",\n\t\t\t\t\t\tObject.keys(this.grid.filter).length !== 0\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.grid.prevent_build = true;\n\t\t\t\tthis.grid.grid_pagination.go_to_page(1);\n\t\t\t\tthis.grid.refresh();\n\t\t\t\tthis.grid.prevent_build = false;\n\t\t\t}, 500)\n\t\t);\n\n\t\t[\"Currency\", \"Float\", \"Int\", \"Percent\", \"Rating\"].includes(df.fieldtype) &&\n\t\t\tfrappe.utils.only_allow_num_decimal($search_input);\n\n\t\treturn $col;\n\t}\n\n\tmake_column(df, colsize, txt, ci) {\n\t\tlet me = this;\n\t\tvar add_class =\n\t\t\t[\"Text\", \"Small Text\"].indexOf(df.fieldtype) !== -1\n\t\t\t\t? \" grid-overflow-no-ellipsis\"\n\t\t\t\t: \"\";\n\t\tadd_class +=\n\t\t\t[\"Int\", \"Currency\", \"Float\", \"Percent\"].indexOf(df.fieldtype) !== -1\n\t\t\t\t? \" text-right\"\n\t\t\t\t: \"\";\n\t\tadd_class += [\"Check\"].indexOf(df.fieldtype) !== -1 ? \" text-center\" : \"\";\n\n\t\tlet grid;\n\t\tlet grid_container;\n\t\tlet input_in_focus = false;\n\n\t\t// prevent random layout shifts caused by widgets and on click position elements inside view (UX).\n\t\tfunction on_input_focus(el) {\n\t\t\tinput_in_focus = true;\n\n\t\t\tlet container_width = grid_container.getBoundingClientRect().width;\n\t\t\tlet container_left = grid_container.getBoundingClientRect().left;\n\t\t\tlet grid_left = parseFloat(grid.style.left);\n\t\t\tlet element_left = el.offset().left;\n\t\t\tlet fieldtype = el.data(\"fieldtype\");\n\n\t\t\tlet offset_right = container_width - (element_left + el.width());\n\t\t\tlet offset_left = 0;\n\t\t\tlet element_screen_x = element_left - container_left;\n\t\t\tlet element_position_x = container_width - (element_left - container_left);\n\n\t\t\tif ([\"Date\", \"Time\", \"Datetime\"].includes(fieldtype)) {\n\t\t\t\toffset_left = element_position_x - 220;\n\t\t\t}\n\t\t\tif ([\"Link\", \"Dynamic Link\"].includes(fieldtype)) {\n\t\t\t\toffset_left = element_position_x - 250;\n\t\t\t}\n\t\t\tif (element_screen_x < 0) {\n\t\t\t\tgrid.style.left = `${grid_left - element_screen_x}px`;\n\t\t\t} else if (offset_left < 0) {\n\t\t\t\tgrid.style.left = `${grid_left + offset_left}px`;\n\t\t\t} else if (offset_right < 0) {\n\t\t\t\tgrid.style.left = `${grid_left + offset_right}px`;\n\t\t\t}\n\t\t}\n\n\t\t// Delay date_picker widget to prevent temparary layout shift (UX).\n\t\tfunction handle_date_picker() {\n\t\t\tlet date_time_picker = document.querySelectorAll(\".datepicker.active\")[0];\n\n\t\t\tdate_time_picker.classList.remove(\"active\");\n\t\t\tdate_time_picker.style.width = \"220px\";\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tdate_time_picker.classList.add(\"active\");\n\t\t\t}, 600);\n\t\t}\n\n\t\tfunction trigger_focus(input_field, col_df) {\n\t\t\tif ([\"Date\", \"Datetime\"].includes(col_df.fieldtype) && col_df?.read_only) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinput_field.trigger(\"focus\");\n\t\t}\n\n\t\tvar $col = $(\n\t\t\t'<div class=\"col grid-static-col col-xs-' + colsize + \" \" + add_class + '\"></div>'\n\t\t)\n\t\t\t.attr(\"data-fieldname\", df.fieldname)\n\t\t\t.attr(\"data-fieldtype\", df.fieldtype)\n\t\t\t.data(\"df\", df)\n\t\t\t.appendTo(this.row)\n\t\t\t.on(\"click\", function (event) {\n\t\t\t\tif (frappe.ui.form.editable_row !== me) {\n\t\t\t\t\tvar out = me.toggle_editable_row();\n\t\t\t\t}\n\t\t\t\tvar col = this;\n\t\t\t\tlet first_input_field = $(col).find('input[type=\"Text\"]:first');\n\t\t\t\tlet input_in_focus = false;\n\n\t\t\t\t$(col)\n\t\t\t\t\t.find(\"input[type='text']\")\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tif ($(this).is(\":focus\")) {\n\t\t\t\t\t\t\tinput_in_focus = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t!input_in_focus && trigger_focus(first_input_field, $(col).data(\"df\"));\n\n\t\t\t\tif (event.pointerType == \"touch\") {\n\t\t\t\t\tfirst_input_field.length && on_input_focus(first_input_field);\n\n\t\t\t\t\tfirst_input_field.one(\"blur\", () => (input_in_focus = false));\n\n\t\t\t\t\tfirst_input_field.data(\"fieldtype\") == \"Date\" && handle_date_picker();\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t});\n\n\t\t$col.field_area = $('<div class=\"field-area\"></div>').appendTo($col).toggle(false);\n\t\t$col.static_area = $('<div class=\"static-area ellipsis\"></div>').appendTo($col).html(txt);\n\n\t\t$(document).ready(function () {\n\t\t\tlet $scrollBar = $(\".grid-scroll-bar\");\n\t\t\tlet form_grid = $(\".form-grid\");\n\t\t\tlet grid_container = $(\".form-grid-container\");\n\t\t\tlet grid_scroll_bar_rows = $(\".grid-scroll-bar-rows\");\n\t\t\t// Make sure the grid container is scrollable\n\t\t\t$scrollBar.on(\"scroll\", function (event) {\n\t\t\t\tgrid_container = $(event.currentTarget).closest(\".form-grid-container\");\n\t\t\t\tform_grid = $(event.currentTarget).closest(\".form-grid\");\n\t\t\t\tgrid_scroll_bar_rows = $(event.currentTarget).closest(\".grid-scroll-bar-rows\");\n\n\t\t\t\tvar scroll_left = $(this).scrollLeft();\n\n\t\t\t\t// Sync the form grid's left position with the scroll bar\n\t\t\t\tform_grid.css(\"position\", \"relative\");\n\t\t\t\tform_grid.css(\"left\", -scroll_left + \"px\");\n\t\t\t\t$(this).css(\"margin-left\", scroll_left + \"px\");\n\t\t\t});\n\n\t\t\t$scrollBar.css(\"width\", grid_container.width());\n\n\t\t\tgrid_scroll_bar_rows.css(\"width\", form_grid[0].scrollWidth);\n\t\t});\n\n\t\t// set title attribute to see full label for columns in the heading row\n\t\tif (!this.doc) {\n\t\t\t$col.attr(\"title\", txt);\n\t\t}\n\t\tdf.fieldname && $col.static_area.toggleClass(\"reqd\", Boolean(df.reqd));\n\n\t\t$col.df = df;\n\t\t$col.column_index = ci;\n\n\t\tthis.columns[df.fieldname] = $col;\n\t\tthis.columns_list.push($col);\n\n\t\treturn $col;\n\t}\n\n\tactivate() {\n\t\tthis.toggle_editable_row(true);\n\t\treturn this;\n\t}\n\n\ttoggle_editable_row(show) {\n\t\tvar me = this;\n\t\t// show static for field based on\n\t\t// whether grid is editable\n\t\tif (\n\t\t\tthis.grid.allow_on_grid_editing() &&\n\t\t\tthis.grid.is_editable() &&\n\t\t\tthis.doc &&\n\t\t\tshow !== false\n\t\t) {\n\t\t\t// disable other editable row\n\t\t\tif (frappe.ui.form.editable_row && frappe.ui.form.editable_row !== this) {\n\t\t\t\tfrappe.ui.form.editable_row.toggle_editable_row(false);\n\t\t\t}\n\n\t\t\tthis.row.toggleClass(\"editable-row\", true);\n\n\t\t\t// setup controls\n\t\t\tthis.columns_list.forEach(function (column) {\n\t\t\t\tme.make_control(column);\n\t\t\t\tcolumn.static_area.toggle(false);\n\t\t\t\tcolumn.field_area.toggle(true);\n\t\t\t});\n\n\t\t\tfrappe.ui.form.editable_row = this;\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.row.toggleClass(\"editable-row\", false);\n\n\t\t\tthis.columns_list.forEach((column, index) => {\n\t\t\t\tif (!this.frm) {\n\t\t\t\t\tlet df = this.grid.visible_columns[index][0];\n\n\t\t\t\t\tlet txt = this.doc\n\t\t\t\t\t\t? frappe.format(this.doc[df.fieldname], df, null, this.doc)\n\t\t\t\t\t\t: __(df.label, null, df.parent);\n\n\t\t\t\t\tthis.refresh_field(df.fieldname, txt);\n\t\t\t\t}\n\n\t\t\t\tif (!column.df.hidden) {\n\t\t\t\t\tcolumn.static_area.toggle(true);\n\t\t\t\t}\n\n\t\t\t\tcolumn.field_area && column.field_area.toggle(false);\n\t\t\t});\n\t\t\tfrappe.ui.form.editable_row = null;\n\t\t}\n\t}\n\n\tmake_control(column) {\n\t\tif (column.field) return;\n\n\t\tvar me = this,\n\t\t\tparent = column.field_area,\n\t\t\tdf = column.df;\n\n\t\tvar field = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: parent,\n\t\t\tonly_input: true,\n\t\t\twith_link_btn: true,\n\t\t\tdoc: this.doc,\n\t\t\tdoctype: this.doc.doctype,\n\t\t\tdocname: this.doc.name,\n\t\t\tfrm: this.grid.frm,\n\t\t\tgrid: this.grid,\n\t\t\tgrid_row: this,\n\t\t\tvalue: this.doc[df.fieldname],\n\t\t});\n\n\t\t// sync get_query\n\t\tfield.get_query = this.grid.get_field(df.fieldname).get_query;\n\n\t\tif (!field.df.onchange_modified) {\n\t\t\tvar field_on_change_function = field.df.onchange;\n\t\t\tfield.df.onchange = (e) => {\n\t\t\t\tfield_on_change_function && field_on_change_function.bind(field)(e);\n\t\t\t\tthis.refresh_field(field.df.fieldname);\n\t\t\t};\n\n\t\t\tfield.df.onchange_modified = true;\n\t\t}\n\n\t\tfield.refresh();\n\t\tif (field.$input) {\n\t\t\tfield.$input\n\t\t\t\t.addClass(\"input-sm\")\n\t\t\t\t.attr(\"data-col-idx\", column.column_index)\n\t\t\t\t.attr(\"placeholder\", __(df.placeholder || df.label));\n\t\t\t// flag list input\n\t\t\tif (this.columns_list && this.columns_list.slice(-1)[0] === column) {\n\t\t\t\tfield.$input.attr(\"data-last-input\", 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_arrow_keys(field);\n\t\tcolumn.field = field;\n\t\tthis.on_grid_fields_dict[df.fieldname] = field;\n\t\tthis.on_grid_fields.push(field);\n\t}\n\n\tset_arrow_keys(field) {\n\t\tvar me = this;\n\t\tlet ignore_fieldtypes = [\"Text\", \"Small Text\", \"Code\", \"Text Editor\", \"HTML Editor\"];\n\t\tif (field.$input) {\n\t\t\tfield.$input.on(\"keydown\", function (e) {\n\t\t\t\tvar { ESCAPE, TAB, UP: UP_ARROW, DOWN: DOWN_ARROW } = frappe.ui.keyCode;\n\t\t\t\tif (![TAB, UP_ARROW, DOWN_ARROW, ESCAPE].includes(e.which)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar values = me.grid.get_data();\n\t\t\t\tvar fieldname = $(this).attr(\"data-fieldname\");\n\t\t\t\tvar fieldtype = $(this).attr(\"data-fieldtype\");\n\n\t\t\t\tlet ctrl_key = e.metaKey || e.ctrlKey;\n\t\t\t\tif (!ignore_fieldtypes.includes(fieldtype) && ctrl_key && e.which !== TAB) {\n\t\t\t\t\tme.add_new_row_using_keys(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.shiftKey && e.altKey && DOWN_ARROW === e.which) {\n\t\t\t\t\tme.duplicate_row_using_keys();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar move_up_down = function (base) {\n\t\t\t\t\tif (ignore_fieldtypes.includes(fieldtype) && !e.altKey) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (field.autocomplete_open) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase.toggle_editable_row();\n\t\t\t\t\tvar input = base.columns[fieldname].field.$input;\n\t\t\t\t\tif (input) {\n\t\t\t\t\t\tinput.focus();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\t// ESC\n\t\t\t\tif (e.which === ESCAPE && !e.shiftKey) {\n\t\t\t\t\tif (me.doc.__unedited) {\n\t\t\t\t\t\tme.grid.grid_rows[me.doc.idx - 1].remove();\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// TAB\n\t\t\t\tif (e.which === TAB && !e.shiftKey) {\n\t\t\t\t\tvar last_column = me.wrapper.find(\":input:enabled:last\").get(0);\n\t\t\t\t\tvar is_last_column = $(this).attr(\"data-last-input\") || last_column === this;\n\n\t\t\t\t\tif (is_last_column) {\n\t\t\t\t\t\t// last row\n\t\t\t\t\t\tif (me.doc.idx === values.length) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tme.grid.add_new_row(null, null, true);\n\t\t\t\t\t\t\t\tme.grid.grid_rows[\n\t\t\t\t\t\t\t\t\tme.grid.grid_rows.length - 1\n\t\t\t\t\t\t\t\t].toggle_editable_row();\n\t\t\t\t\t\t\t\tme.grid.set_focus_on_row();\n\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// last column before last row\n\t\t\t\t\t\t\tme.grid.grid_rows[me.doc.idx].toggle_editable_row();\n\t\t\t\t\t\t\tme.grid.set_focus_on_row(me.doc.idx);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which === UP_ARROW) {\n\t\t\t\t\tif (me.doc.idx > 1) {\n\t\t\t\t\t\tvar prev = me.grid.grid_rows[me.doc.idx - 2];\n\t\t\t\t\t\tif (move_up_down(prev)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which === DOWN_ARROW) {\n\t\t\t\t\tif (me.doc.idx < values.length) {\n\t\t\t\t\t\tvar next = me.grid.grid_rows[me.doc.idx];\n\t\t\t\t\t\tif (move_up_down(next)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tduplicate_row_using_keys() {\n\t\tsetTimeout(() => {\n\t\t\tthis.insert(false, true, true);\n\t\t\tthis.grid.grid_rows[this.doc.idx].toggle_editable_row();\n\t\t\tthis.grid.set_focus_on_row(this.doc.idx);\n\t\t}, 100);\n\t}\n\n\tadd_new_row_using_keys(e) {\n\t\tlet idx = \"\";\n\n\t\tlet ctrl_key = e.metaKey || e.ctrlKey;\n\t\tlet is_down_arrow_key_press = e.which === 40;\n\n\t\t// Add new row at the end or start of the table\n\t\tif (ctrl_key && e.shiftKey) {\n\t\t\tidx = is_down_arrow_key_press ? null : 1;\n\t\t\tthis.grid.add_new_row(\n\t\t\t\tidx,\n\t\t\t\tnull,\n\t\t\t\tis_down_arrow_key_press,\n\t\t\t\tfalse,\n\t\t\t\tis_down_arrow_key_press,\n\t\t\t\t!is_down_arrow_key_press\n\t\t\t);\n\t\t\tidx = is_down_arrow_key_press ? cint(this.grid.grid_rows.length) - 1 : 0;\n\t\t} else if (ctrl_key) {\n\t\t\tidx = is_down_arrow_key_press ? this.doc.idx : this.doc.idx - 1;\n\t\t\tthis.insert(false, is_down_arrow_key_press);\n\t\t}\n\n\t\tif (idx !== \"\") {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.grid.grid_rows[idx].toggle_editable_row();\n\t\t\t\tthis.grid.set_focus_on_row(idx);\n\t\t\t}, 100);\n\t\t}\n\t}\n\n\tget_open_form() {\n\t\treturn frappe.ui.form.get_open_grid_form();\n\t}\n\n\ttoggle_view(show, callback) {\n\t\tif (!this.doc) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.frm) {\n\t\t\t// reload doc\n\t\t\tthis.doc = locals[this.doc.doctype][this.doc.name];\n\t\t}\n\n\t\t// hide other\n\t\tvar open_row = this.get_open_form();\n\n\t\tif (show === undefined) show = !open_row;\n\n\t\t// call blur\n\t\tdocument.activeElement && document.activeElement.blur();\n\n\t\tif (show && open_row) {\n\t\t\tif (open_row == this) {\n\t\t\t\t// already open, do nothing\n\t\t\t\tcallback && callback();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// close other views\n\t\t\t\topen_row.toggle_view(false);\n\t\t\t}\n\t\t}\n\n\t\tif (show) {\n\t\t\tthis.show_form();\n\t\t} else {\n\t\t\tthis.hide_form();\n\t\t}\n\t\tcallback && callback();\n\n\t\treturn this;\n\t}\n\tshow_form() {\n\t\tif (frappe.utils.is_xs()) {\n\t\t\t$(this.grid.form_grid).css(\"min-width\", \"0\");\n\t\t\t$(this.grid.form_grid).css(\"position\", \"unset\");\n\t\t}\n\t\tif (!this.grid_form) {\n\t\t\tthis.grid_form = new GridRowForm({\n\t\t\t\trow: this,\n\t\t\t});\n\t\t}\n\t\tthis.grid_form.render();\n\t\tthis.row.toggle(false);\n\t\t// this.form_panel.toggle(true);\n\n\t\tlet cannot_add_rows =\n\t\t\tthis.grid.cannot_add_rows || (this.grid.df && this.grid.df.cannot_add_rows);\n\t\tthis.wrapper\n\t\t\t.find(\n\t\t\t\t\".grid-insert-row-below, .grid-insert-row, .grid-duplicate-row, .grid-append-row\"\n\t\t\t)\n\t\t\t.toggle(!cannot_add_rows);\n\n\t\tthis.wrapper\n\t\t\t.find(\".grid-delete-row\")\n\t\t\t.toggle(!(this.grid.df && this.grid.df.cannot_delete_rows));\n\n\t\tfrappe.dom.freeze(\"\", \"dark grid-form\");\n\t\tif (cur_frm) cur_frm.cur_grid = this;\n\t\tthis.wrapper.addClass(\"grid-row-open\");\n\t\tif (\n\t\t\t!frappe.dom.is_element_in_viewport(this.wrapper) &&\n\t\t\t!frappe.dom.is_element_in_modal(this.wrapper)\n\t\t) {\n\t\t\t// -15 offset to make form look visually centered\n\t\t\tfrappe.utils.scroll_to(this.wrapper, true, -15);\n\t\t}\n\n\t\tif (this.frm) {\n\t\t\tthis.frm.script_manager.trigger(this.doc.parentfield + \"_on_form_rendered\");\n\t\t\tthis.frm.script_manager.trigger(\"form_render\", this.doc.doctype, this.doc.name);\n\t\t}\n\t}\n\thide_form() {\n\t\tif (frappe.utils.is_xs()) {\n\t\t\t$(this.grid.form_grid).css(\"min-width\", \"738px\");\n\t\t\t$(this.grid.form_grid).css(\"position\", \"relative\");\n\t\t}\n\t\tfrappe.dom.unfreeze();\n\t\tthis.row.toggle(true);\n\t\tif (!frappe.dom.is_element_in_modal(this.row)) {\n\t\t\tfrappe.utils.scroll_to(this.row, true, 15);\n\t\t}\n\t\tthis.refresh();\n\t\tif (cur_frm) cur_frm.cur_grid = null;\n\t\tthis.wrapper.removeClass(\"grid-row-open\");\n\t}\n\thas_prev() {\n\t\treturn this.doc.idx > 1;\n\t}\n\topen_prev() {\n\t\tif (!this.doc) return;\n\t\tthis.open_row_at_index(this.doc.idx - 2);\n\t}\n\thas_next() {\n\t\treturn this.doc.idx < this.grid.data.length;\n\t}\n\topen_next() {\n\t\tif (!this.doc) return;\n\n\t\tthis.open_row_at_index(this.doc.idx);\n\t}\n\topen_row_at_index(row_index) {\n\t\tif (!this.grid.data[row_index]) return;\n\n\t\tthis.change_page_if_reqd(row_index);\n\t\tthis.grid.grid_rows[row_index].toggle_view(true);\n\t\treturn true;\n\t}\n\tchange_page_if_reqd(row_index) {\n\t\tconst { page_index, page_length } = this.grid.grid_pagination;\n\n\t\trow_index++;\n\t\tlet new_page;\n\n\t\tif (row_index <= (page_index - 1) * page_length) {\n\t\t\tnew_page = page_index - 1;\n\t\t} else if (row_index > page_index * page_length) {\n\t\t\tnew_page = page_index + 1;\n\t\t}\n\n\t\tif (new_page) {\n\t\t\tthis.grid.grid_pagination.go_to_page(new_page);\n\t\t}\n\t}\n\trefresh_field(fieldname, txt) {\n\t\tlet fields =\n\t\t\tthis.grid.user_defined_columns && this.grid.user_defined_columns.length > 0\n\t\t\t\t? this.grid.user_defined_columns\n\t\t\t\t: this.docfields;\n\n\t\tlet df = fields.find((col) => {\n\t\t\treturn col?.fieldname === fieldname;\n\t\t});\n\n\t\t// format values if no frm\n\t\tif (df && this.doc) {\n\t\t\ttxt = frappe.format(this.doc[fieldname], df, null, this.doc);\n\t\t}\n\n\t\tif (!txt && this.frm) {\n\t\t\ttxt = frappe.format(this.doc[fieldname], df, null, this.frm.doc);\n\t\t}\n\n\t\t// reset static value\n\t\tlet column = this.columns[fieldname];\n\t\tif (column) {\n\t\t\tcolumn.static_area.html(txt || \"\");\n\t\t\tif (df && df.reqd) {\n\t\t\t\tcolumn.toggleClass(\"error\", !!(txt === null || txt === \"\"));\n\t\t\t}\n\t\t}\n\n\t\tlet field = this.on_grid_fields_dict[fieldname];\n\t\t// reset field value\n\t\tif (field) {\n\t\t\t// the below if statement is added to factor in the exception when this.doc is undefined -\n\t\t\t// - after row removals via customize_form.js on links, actions and states child-tables\n\t\t\tif (this.doc) field.docname = this.doc.name;\n\t\t\tfield.refresh();\n\t\t}\n\n\t\t// in form\n\t\tif (this.grid_form) {\n\t\t\tthis.grid_form.refresh_field(fieldname);\n\t\t}\n\t}\n\tget_field(fieldname) {\n\t\tlet field = this.on_grid_fields_dict[fieldname];\n\t\tif (field) {\n\t\t\treturn field;\n\t\t} else if (this.grid_form) {\n\t\t\treturn this.grid_form.fields_dict[fieldname];\n\t\t} else {\n\t\t\tthrow `fieldname ${fieldname} not found`;\n\t\t}\n\t}\n\n\tget_visible_columns(blacklist = []) {\n\t\tvar me = this;\n\t\tvar visible_columns = $.map(this.docfields, function (df) {\n\t\t\tvar visible =\n\t\t\t\t!df.hidden &&\n\t\t\t\tdf.in_list_view &&\n\t\t\t\tme.grid.frm.get_perm(df.permlevel, \"read\") &&\n\t\t\t\t!frappe.model.layout_fields.includes(df.fieldtype) &&\n\t\t\t\t!blacklist.includes(df.fieldname);\n\n\t\t\treturn visible ? df : null;\n\t\t});\n\t\treturn visible_columns;\n\t}\n\tset_field_property(fieldname, property, value) {\n\t\t// set a field property for open form / grid form\n\t\tvar me = this;\n\n\t\tvar set_property = function (field) {\n\t\t\tif (!field) return;\n\t\t\tfield.df[property] = value;\n\t\t\tfield.refresh();\n\t\t};\n\n\t\t// set property in grid form\n\t\tif (this.grid_form) {\n\t\t\tset_property(this.grid_form.fields_dict[fieldname]);\n\t\t\tthis.grid_form.layout && this.grid_form.layout.refresh_sections();\n\t\t}\n\n\t\t// set property in on grid fields\n\t\tset_property(this.on_grid_fields_dict[fieldname]);\n\t}\n\ttoggle_reqd(fieldname, reqd) {\n\t\tthis.set_field_property(fieldname, \"reqd\", reqd ? 1 : 0);\n\t}\n\ttoggle_display(fieldname, show) {\n\t\tthis.set_field_property(fieldname, \"hidden\", show ? 0 : 1);\n\t}\n\ttoggle_editable(fieldname, editable) {\n\t\tthis.set_field_property(fieldname, \"read_only\", editable ? 0 : 1);\n\t}\n}", "export default class GridPagination {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.setup_pagination();\n\t}\n\n\tsetup_pagination() {\n\t\tthis.page_length = 50;\n\t\tthis.page_index = 1;\n\t\tthis.total_pages = Math.ceil(this.grid.data.length / this.page_length);\n\n\t\tthis.render_pagination();\n\t}\n\n\trender_pagination() {\n\t\tif (this.grid.data.length <= this.page_length) {\n\t\t\tthis.wrapper.find(\".grid-pagination\").html(\"\");\n\t\t} else {\n\t\t\tlet $pagination_template = this.get_pagination_html();\n\t\t\tthis.wrapper.find(\".grid-pagination\").html($pagination_template);\n\t\t\tthis.prev_page_button = this.wrapper.find(\".prev-page\");\n\t\t\tthis.next_page_button = this.wrapper.find(\".next-page\");\n\t\t\tthis.$page_number = this.wrapper.find(\".current-page-number\");\n\t\t\tthis.$total_pages = this.wrapper.find(\".total-page-number\");\n\t\t\tthis.first_page_button = this.wrapper.find(\".first-page\");\n\t\t\tthis.last_page_button = this.wrapper.find(\".last-page\");\n\n\t\t\tthis.bind_pagination_events();\n\t\t}\n\t}\n\n\tbind_pagination_events() {\n\t\tthis.prev_page_button.on(\"click\", () => {\n\t\t\tthis.render_prev_page();\n\t\t});\n\n\t\tthis.next_page_button.on(\"click\", () => {\n\t\t\tthis.render_next_page();\n\t\t});\n\n\t\tthis.first_page_button.on(\"click\", () => {\n\t\t\tthis.go_to_page(1);\n\t\t});\n\n\t\tthis.last_page_button.on(\"click\", () => {\n\t\t\tthis.go_to_page(this.total_pages);\n\t\t});\n\n\t\tthis.$page_number.on(\"keyup\", (e) => {\n\t\t\te.currentTarget.style.width = (e.currentTarget.value.length + 1) * 8 + \"px\";\n\t\t});\n\n\t\tthis.$page_number.on(\"keydown\", (e) => {\n\t\t\te = e ? e : window.event;\n\t\t\tvar charCode = e.which ? e.which : e.keyCode;\n\t\t\tlet arrow = { up: 38, down: 40 };\n\n\t\t\tswitch (charCode) {\n\t\t\t\tcase arrow.up:\n\t\t\t\t\tthis.inc_dec_number(true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase arrow.down:\n\t\t\t\t\tthis.inc_dec_number(false);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// only allow numbers from 0-9 and up, down, left, right arrow keys\n\t\t\tif (\n\t\t\t\tcharCode > 31 &&\n\t\t\t\t(charCode < 48 || charCode > 57) &&\n\t\t\t\t![37, 38, 39, 40].includes(charCode)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.$page_number.on(\"focusout\", (e) => {\n\t\t\tif (this.page_index == e.currentTarget.value) return;\n\t\t\tthis.page_index = e.currentTarget.value;\n\n\t\t\tif (this.page_index < 1) {\n\t\t\t\tthis.page_index = 1;\n\t\t\t} else if (this.page_index > this.total_pages) {\n\t\t\t\tthis.page_index = this.total_pages;\n\t\t\t}\n\n\t\t\tthis.go_to_page();\n\t\t});\n\t}\n\n\tinc_dec_number(increment) {\n\t\tlet new_value = parseInt(this.$page_number.val());\n\t\tincrement ? new_value++ : new_value--;\n\n\t\tif (new_value < 1 || new_value > this.total_pages) return;\n\n\t\tthis.$page_number.val(new_value);\n\t}\n\n\tupdate_page_numbers() {\n\t\tlet total_pages = Math.ceil(this.grid.data.length / this.page_length);\n\t\tif (this.total_pages !== total_pages) {\n\t\t\tthis.total_pages = total_pages;\n\t\t\tthis.render_pagination();\n\t\t}\n\t}\n\n\tcheck_page_number() {\n\t\tif (this.page_index > this.total_pages && this.page_index > 1) {\n\t\t\tthis.go_to_page(this.page_index - 1);\n\t\t}\n\t}\n\n\tget_pagination_html() {\n\t\tlet page_text_html = `<div class=\"page-text\">\n\t\t\t\t<input class=\"current-page-number page-number\" type=\"text\" value=\"${__(this.page_index)}\"/>\n\t\t\t\t<span>${__(\"of\")}</span>\n\t\t\t\t<span class=\"total-page-number page-number\"> ${__(this.total_pages)} </span>\n\t\t\t</div>`;\n\n\t\treturn $(`<button class=\"btn btn-secondary btn-xs first-page\"\">\n\t\t\t\t<span>${__(\"First\")}</span>\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-secondary btn-xs prev-page\">${frappe.utils.icon(\"left\", \"xs\")}</button>\n\t\t\t${page_text_html}\n\t\t\t<button class=\"btn btn-secondary btn-xs next-page\">${frappe.utils.icon(\"right\", \"xs\")}</button>\n\t\t\t<button class=\"btn btn-secondary btn-xs last-page\">\n\t\t\t\t<span>${__(\"Last\")}</span>\n\t\t\t</button>`);\n\t}\n\n\trender_next_page() {\n\t\tif (this.page_index * this.page_length < this.grid.data.length) {\n\t\t\tthis.page_index++;\n\t\t\tthis.go_to_page();\n\t\t}\n\t}\n\n\trender_prev_page() {\n\t\tif (this.page_index > 1) {\n\t\t\tthis.page_index--;\n\t\t\tthis.go_to_page();\n\t\t}\n\t}\n\n\tgo_to_page(index, from_refresh) {\n\t\tif (!index) {\n\t\t\tindex = this.page_index;\n\t\t} else {\n\t\t\tthis.page_index = index;\n\t\t}\n\t\tlet $rows = $(this.grid.parent).find(\".rows\").empty();\n\t\tthis.grid.render_result_rows($rows, true);\n\t\tif (this.$page_number) {\n\t\t\tthis.$page_number.val(index);\n\t\t\tthis.$page_number.css(\"width\", (index.toString().length + 1) * 8 + \"px\");\n\t\t}\n\n\t\tthis.update_page_numbers();\n\t\tif (!from_refresh) {\n\t\t\tthis.grid.scroll_to_top();\n\t\t}\n\t}\n\n\tgo_to_last_page_to_add_row() {\n\t\tlet total_pages = this.total_pages;\n\t\tlet page_length = this.page_length;\n\t\tif (this.grid.data.length == page_length * total_pages) {\n\t\t\tthis.go_to_page(total_pages + 1);\n\t\t\tfrappe.utils.scroll_to(this.wrapper);\n\t\t} else if (this.page_index == this.total_pages) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.go_to_page(total_pages);\n\t\t}\n\t}\n\n\tget_result_length() {\n\t\treturn this.grid.data.length < this.page_index * this.page_length\n\t\t\t? this.grid.data.length\n\t\t\t: this.page_index * this.page_length;\n\t}\n}", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nimport GridRow from \"./grid_row\";\nimport GridPagination from \"./grid_pagination\";\n\nfrappe.ui.form.get_open_grid_form = function () {\n\treturn $(\".grid-row-open\").data(\"grid_row\");\n};\n\nfrappe.ui.form.close_grid_form = function () {\n\tvar open_form = frappe.ui.form.get_open_grid_form();\n\topen_form && open_form.hide_form();\n\n\t// hide editable row too\n\tif (frappe.ui.form.editable_row) {\n\t\tfrappe.ui.form.editable_row.toggle_editable_row(false);\n\t}\n};\n\nexport default class Grid {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.fieldinfo = {};\n\t\tthis.doctype = this.df.options;\n\n\t\tif (this.doctype) {\n\t\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\t}\n\t\tthis.fields_map = {};\n\t\tthis.template = null;\n\t\tthis.multiple_set = false;\n\t\tif (\n\t\t\tthis.frm &&\n\t\t\tthis.frm.meta.__form_grid_templates &&\n\t\t\tthis.frm.meta.__form_grid_templates[this.df.fieldname]\n\t\t) {\n\t\t\tthis.template = this.frm.meta.__form_grid_templates[this.df.fieldname];\n\t\t}\n\t\tthis.filter = {};\n\t\tthis.is_grid = true;\n\t\tthis.debounced_refresh = this.refresh.bind(this);\n\t\tthis.debounced_refresh = frappe.utils.debounce(this.debounced_refresh, 100);\n\t}\n\n\tget perm() {\n\t\treturn this.control?.perm || this.frm?.perm || this.df.perm;\n\t}\n\n\tset perm(_perm) {\n\t\tconsole.error(\"Setting perm on grid isn't supported, update form's perm instead\");\n\t}\n\n\tallow_on_grid_editing() {\n\t\tif ((this.meta && this.meta.editable_grid) || !this.meta) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tmake() {\n\t\tlet template = `\n\t\t\t<div class=\"grid-field\">\n\t\t\t\t<label class=\"control-label\">${__(this.df.label || \"\")}</label>\n\t\t\t\t<span class=\"help\"></span>\n\t\t\t\t<p class=\"text-muted small grid-description\"></p>\n\t\t\t\t<div class=\"grid-custom-buttons\"></div>\n\t\t\t\t<div class=\"form-grid-container\">\n\t\t\t\t\t<div class=\"form-grid\">\n\t\t\t\t\t\t<div class=\"grid-heading-row\"></div>\n\t\t\t\t\t\t<div class=\"grid-body\">\n\t\t\t\t\t\t\t<div class=\"rows\"></div>\n\t\t\t\t\t\t\t<div class=\"grid-empty text-center text-extra-muted\">\n\t\t\t\t\t\t\t\t${__(\"No rows\")}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"grid-scroll-bar\">\n\t\t\t\t\t\t\t\t<div class=\"grid-scroll-bar-rows\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"small form-clickable-section grid-footer\">\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<div class=\"grid-buttons\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-danger grid-remove-rows hidden\"\n\t\t\t\t\t\t\t\tdata-action=\"delete_rows\">\n\t\t\t\t\t\t\t\t${__(\"Delete\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-danger grid-remove-all-rows hidden\"\n\t\t\t\t\t\t\t\tdata-action=\"delete_all_rows\">\n\t\t\t\t\t\t\t\t${__(\"Delete All\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<!-- hack to allow firefox include this in tabs -->\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-secondary grid-add-row\">\n\t\t\t\t\t\t\t\t${__(\"Add Row\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-add-multiple-rows btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Add Multiple\")}</a>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"grid-pagination\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"grid-bulk-actions text-right\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-download btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Download\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-upload btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Upload\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.wrapper = $(template).appendTo(this.parent);\n\t\t$(this.parent).addClass(\"form-group\");\n\t\tthis.set_grid_description();\n\t\tthis.set_doc_url();\n\n\t\tfrappe.utils.bind_actions_with_object(this.wrapper, this);\n\n\t\tthis.form_grid = this.wrapper.find(\".form-grid\");\n\n\t\tthis.setup_add_row();\n\n\t\tthis.setup_grid_pagination();\n\n\t\tthis.custom_buttons = {};\n\t\tthis.grid_buttons = this.wrapper.find(\".grid-buttons\");\n\t\tthis.grid_custom_buttons = this.wrapper.find(\".grid-custom-buttons\");\n\t\tthis.remove_rows_button = this.grid_buttons.find(\".grid-remove-rows\");\n\t\tthis.remove_all_rows_button = this.grid_buttons.find(\".grid-remove-all-rows\");\n\n\t\tthis.setup_allow_bulk_edit();\n\t\tthis.setup_check();\n\t\tif (this.df.on_setup) {\n\t\t\tthis.df.on_setup(this);\n\t\t}\n\t}\n\tset_grid_description() {\n\t\tlet description_wrapper = $(this.parent).find(\".grid-description\");\n\t\tif (this.df.description) {\n\t\t\tdescription_wrapper.html(__(this.df.description));\n\t\t} else {\n\t\t\tdescription_wrapper.hide();\n\t\t}\n\t}\n\n\tset_doc_url() {\n\t\tlet unsupported_fieldtypes = frappe.model.no_value_type.filter(\n\t\t\t(x) => frappe.model.table_fields.indexOf(x) === -1\n\t\t);\n\n\t\tif (\n\t\t\t!this.df.label ||\n\t\t\t!this.df?.documentation_url ||\n\t\t\tunsupported_fieldtypes.includes(this.df.fieldtype)\n\t\t)\n\t\t\treturn;\n\n\t\tlet $help = $(this.parent).find(\"span.help\");\n\t\t$help.empty();\n\t\t$(`<a href=\"${this.df.documentation_url}\" target=\"_blank\">\n\t\t\t${frappe.utils.icon(\"help\", \"sm\")}\n\t\t</a>`).appendTo($help);\n\t}\n\n\tsetup_grid_pagination() {\n\t\tthis.grid_pagination = new GridPagination({\n\t\t\tgrid: this,\n\t\t\twrapper: this.wrapper,\n\t\t});\n\t}\n\n\tsetup_check() {\n\t\tthis.wrapper.on(\"click\", \".grid-row-check\", (e) => {\n\t\t\tconst $check = $(e.currentTarget);\n\t\t\tconst checked = $check.prop(\"checked\");\n\t\t\tconst is_select_all = $check.parents(\".grid-heading-row:first\").length !== 0;\n\t\t\tconst docname = $check.parents(\".grid-row:first\")?.attr(\"data-name\");\n\n\t\t\tif (is_select_all) {\n\t\t\t\t// (un)check all visible checkboxes\n\t\t\t\tthis.form_grid.find(\".grid-row-check\").prop(\"checked\", checked);\n\n\t\t\t\t// set following rows as checked in model\n\t\t\t\tlet result_length = this.grid_pagination.get_result_length();\n\t\t\t\tlet page_index = this.grid_pagination.page_index;\n\t\t\t\tlet page_length = this.grid_pagination.page_length;\n\t\t\t\tfor (let ri = (page_index - 1) * page_length; ri < result_length; ri++) {\n\t\t\t\t\tthis.grid_rows[ri].select(checked);\n\t\t\t\t}\n\t\t\t} else if (docname) {\n\t\t\t\tif (e.shiftKey && this.last_checked_docname) {\n\t\t\t\t\tthis.check_range(docname, this.last_checked_docname, checked);\n\t\t\t\t}\n\t\t\t\tthis.grid_rows_by_docname[docname].select(checked);\n\t\t\t\tthis.last_checked_docname = docname;\n\t\t\t}\n\t\t\tthis.refresh_remove_rows_button();\n\t\t});\n\t}\n\n\t/**\n\t * Checks or unchecks all checkboxes between two rows (included), given their docnames.\n\t * Rows are only checked only if both parameters are valid docnames.\n\t * @param {string} docname1\n\t * @param {string} docname2\n\t */\n\tcheck_range(docname1, docname2, checked = true) {\n\t\tconst row_1 = this.grid_rows_by_docname[docname1];\n\t\tconst row_2 = this.grid_rows_by_docname[docname2];\n\t\tconst index_1 = this.grid_rows.indexOf(row_1);\n\t\tconst index_2 = this.grid_rows.indexOf(row_2);\n\t\tif (index_1 === -1 || index_2 === -1) return;\n\t\tconst [start, end] = [index_1, index_2].sort((a, b) => a - b);\n\t\tconst rows = this.grid_rows.slice(start, end + 1);\n\t\tfor (const row of rows) {\n\t\t\trow.select(checked);\n\t\t\trow.row_check?.find(\".grid-row-check\").prop(\"checked\", checked);\n\t\t}\n\t}\n\n\tdelete_rows() {\n\t\tvar dirty = false;\n\n\t\tlet tasks = [];\n\t\tlet selected_children = this.get_selected_children();\n\t\tselected_children.forEach((doc) => {\n\t\t\ttasks.push(() => {\n\t\t\t\tif (!this.frm) {\n\t\t\t\t\tthis.df.data = this.get_data();\n\t\t\t\t\tthis.df.data = this.df.data.filter((row) => row.idx != doc.idx);\n\t\t\t\t}\n\t\t\t\tthis.grid_rows_by_docname[doc.name]?.remove();\n\t\t\t\tdirty = true;\n\t\t\t});\n\t\t\ttasks.push(() => frappe.timeout(0.1));\n\t\t});\n\n\t\tif (!this.frm) {\n\t\t\ttasks.push(() => {\n\t\t\t\t// reorder idx of df.data\n\t\t\t\tthis.df.data.forEach((row, index) => (row.idx = index + 1));\n\t\t\t});\n\t\t}\n\n\t\ttasks.push(() => {\n\t\t\tif (dirty) {\n\t\t\t\tthis.refresh();\n\t\t\t\tthis.frm &&\n\t\t\t\t\tthis.frm.script_manager.trigger(this.df.fieldname + \"_delete\", this.doctype);\n\t\t\t}\n\t\t});\n\n\t\tfrappe.run_serially(tasks);\n\n\t\tthis.wrapper.find(\".grid-heading-row .grid-row-check:checked:first\").prop(\"checked\", 0);\n\t\tif (selected_children.length == this.grid_pagination.page_length) {\n\t\t\tthis.scroll_to_top();\n\t\t}\n\t}\n\n\tdelete_all_rows() {\n\t\tfrappe.confirm(__(\"Are you sure you want to delete all rows?\"), () => {\n\t\t\tthis.frm.doc[this.df.fieldname] = [];\n\t\t\t$(this.parent).find(\".rows\").empty();\n\t\t\tthis.grid_rows = [];\n\t\t\tthis.refresh();\n\t\t\tthis.frm &&\n\t\t\t\tthis.frm.script_manager.trigger(this.df.fieldname + \"_delete\", this.doctype);\n\t\t\tthis.frm && this.frm.dirty();\n\t\t\tthis.scroll_to_top();\n\t\t});\n\t}\n\n\tscroll_to_top() {\n\t\tfrappe.utils.scroll_to(this.wrapper);\n\t}\n\n\tselect_row(name) {\n\t\tthis.grid_rows_by_docname[name].select();\n\t}\n\n\tremove_all() {\n\t\tthis.grid_rows.forEach((row) => {\n\t\t\trow.remove();\n\t\t});\n\t}\n\n\trefresh_remove_rows_button() {\n\t\tif (this.df.cannot_delete_rows) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.remove_rows_button.toggleClass(\n\t\t\t\"hidden\",\n\t\t\tthis.wrapper.find(\".grid-body .grid-row-check:checked:first\").length ? false : true\n\t\t);\n\n\t\tlet select_all_checkbox_checked = this.wrapper.find(\n\t\t\t\".grid-heading-row .grid-row-check:checked:first\"\n\t\t).length;\n\t\tlet show_delete_all_btn =\n\t\t\tselect_all_checkbox_checked && this.data.length > this.get_selected_children().length;\n\t\tthis.remove_all_rows_button.toggleClass(\"hidden\", !show_delete_all_btn);\n\t}\n\n\tdebounced_refresh_remove_rows_button = frappe.utils.debounce(\n\t\tthis.refresh_remove_rows_button,\n\t\t100\n\t);\n\n\tget_selected() {\n\t\treturn (this.grid_rows || [])\n\t\t\t.map((row) => {\n\t\t\t\treturn row.doc.__checked ? row.doc.name : null;\n\t\t\t})\n\t\t\t.filter((d) => {\n\t\t\t\treturn d;\n\t\t\t});\n\t}\n\n\tget_selected_children() {\n\t\treturn (this.data || [])\n\t\t\t.map((row) => {\n\t\t\t\treturn row.__checked ? row : 0;\n\t\t\t})\n\t\t\t.filter((d) => {\n\t\t\t\treturn d;\n\t\t\t});\n\t}\n\n\treset_grid() {\n\t\tthis.visible_columns = [];\n\t\tthis.grid_rows = [];\n\n\t\t$(this.parent).find(\".grid-body .grid-row\").remove();\n\t\tthis.refresh();\n\t}\n\n\tmake_head() {\n\t\tif (this.prevent_build) return;\n\n\t\t// labels\n\t\tif (this.header_row) {\n\t\t\t$(this.parent).find(\".grid-heading-row .grid-row\").remove();\n\t\t}\n\t\tthis.header_row = new GridRow({\n\t\t\tparent: $(this.parent).find(\".grid-heading-row\"),\n\t\t\tparent_df: this.df,\n\t\t\tdocfields: this.docfields,\n\t\t\tfrm: this.frm,\n\t\t\tgrid: this,\n\t\t\tconfigure_columns: true,\n\t\t});\n\n\t\tthis.header_search = new GridRow({\n\t\t\tparent: $(this.parent).find(\".grid-heading-row\"),\n\t\t\tparent_df: this.df,\n\t\t\tdocfields: this.docfields,\n\t\t\tfrm: this.frm,\n\t\t\tgrid: this,\n\t\t\tshow_search: true,\n\t\t});\n\t\tthis.header_search.row.addClass(\"filter-row\");\n\t\tif (this.header_search.show_search || this.header_search.show_search_row()) {\n\t\t\t$(this.parent).find(\".grid-heading-row\").addClass(\"with-filter\");\n\t\t} else {\n\t\t\t$(this.parent).find(\".grid-heading-row\").removeClass(\"with-filter\");\n\t\t}\n\n\t\tthis.filter_applied && this.update_search_columns();\n\t}\n\n\tupdate_search_columns() {\n\t\tfor (const field in this.filter) {\n\t\t\tif (this.filter[field] && !this.header_search.search_columns[field]) {\n\t\t\t\tdelete this.filter[field];\n\t\t\t\tthis.data = this.get_data(this.filter_applied);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.filter[field] && this.filter[field].value) {\n\t\t\t\tlet $input = this.header_search.row_index.find(\"input\");\n\t\t\t\tif (field && field !== \"row-index\") {\n\t\t\t\t\t$input = this.header_search.search_columns[field].find(\"input\");\n\t\t\t\t}\n\t\t\t\t$input.val(this.filter[field].value);\n\t\t\t}\n\t\t}\n\t}\n\n\trefresh() {\n\t\tif (this.frm && this.frm.setting_dependency) return;\n\n\t\tthis.filter_applied = Object.keys(this.filter).length !== 0;\n\t\tthis.data = this.get_data(this.filter_applied);\n\n\t\t!this.wrapper && this.make();\n\t\tlet $rows = $(this.parent).find(\".rows\");\n\n\t\tthis.setup_fields();\n\n\t\tif (this.frm) {\n\t\t\tthis.display_status = frappe.perm.get_field_display_status(\n\t\t\t\tthis.df,\n\t\t\t\tthis.frm.doc,\n\t\t\t\tthis.perm\n\t\t\t);\n\t\t} else if (this.df.is_web_form && this.control) {\n\t\t\tthis.display_status = this.control.get_status();\n\t\t} else {\n\t\t\t// not in form\n\t\t\tthis.display_status = \"Write\";\n\t\t}\n\n\t\tif (this.display_status === \"None\") return;\n\n\t\t// redraw\n\t\tthis.make_head();\n\n\t\tif (!this.grid_rows) {\n\t\t\t/** @type {GridRow[]} */\n\t\t\tthis.grid_rows = [];\n\t\t}\n\n\t\tthis.truncate_rows();\n\t\t/** @type {Record<string, GridRow>} */\n\t\tthis.grid_rows_by_docname = {};\n\n\t\tthis.grid_pagination.update_page_numbers();\n\t\tthis.render_result_rows($rows, false);\n\t\tthis.grid_pagination.check_page_number();\n\t\tthis.wrapper.find(\".grid-empty\").toggleClass(\"hidden\", Boolean(this.data.length));\n\n\t\t// toolbar\n\t\tthis.setup_toolbar();\n\t\tthis.toggle_checkboxes(this.display_status !== \"Read\");\n\n\t\t// sortable\n\t\tif (this.is_sortable() && !this.sortable_setup_done) {\n\t\t\tthis.make_sortable($rows);\n\t\t\tthis.sortable_setup_done = true;\n\t\t}\n\n\t\tthis.last_display_status = this.display_status;\n\t\tthis.last_docname = this.frm && this.frm.docname;\n\n\t\t// red if mandatory\n\t\tthis.form_grid.toggleClass(\"error\", !!(this.df.reqd && !(this.data && this.data.length)));\n\n\t\tthis.refresh_remove_rows_button();\n\n\t\tthis.wrapper.trigger(\"change\");\n\t}\n\n\trender_result_rows($rows, append_row) {\n\t\tlet result_length = this.grid_pagination.get_result_length();\n\t\tlet page_index = this.grid_pagination.page_index;\n\t\tlet page_length = this.grid_pagination.page_length;\n\t\tif (!this.grid_rows) {\n\t\t\treturn;\n\t\t}\n\t\tfor (var ri = (page_index - 1) * page_length; ri < result_length; ri++) {\n\t\t\tvar d = this.data[ri];\n\t\t\tif (!d) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (d.idx === undefined) {\n\t\t\t\td.idx = ri + 1;\n\t\t\t}\n\t\t\tif (d.name === undefined) {\n\t\t\t\td.name = \"row \" + d.idx;\n\t\t\t}\n\t\t\tlet grid_row;\n\t\t\tif (this.grid_rows[ri] && !append_row) {\n\t\t\t\tgrid_row = this.grid_rows[ri];\n\t\t\t\tgrid_row.doc = d;\n\t\t\t\tgrid_row.refresh();\n\t\t\t} else {\n\t\t\t\tgrid_row = new GridRow({\n\t\t\t\t\tparent: $rows,\n\t\t\t\t\tparent_df: this.df,\n\t\t\t\t\tdocfields: this.docfields,\n\t\t\t\t\tdoc: d,\n\t\t\t\t\tfrm: this.frm,\n\t\t\t\t\tgrid: this,\n\t\t\t\t});\n\t\t\t\tthis.grid_rows[ri] = grid_row;\n\t\t\t}\n\n\t\t\tthis.grid_rows_by_docname[d.name] = grid_row;\n\t\t}\n\t}\n\n\tsetup_toolbar() {\n\t\tif (this.is_editable()) {\n\t\t\tthis.wrapper.find(\".grid-footer\").toggle(true);\n\n\t\t\t// show, hide buttons to add rows\n\t\t\tif (this.cannot_add_rows || (this.df && this.df.cannot_add_rows)) {\n\t\t\t\t// add 'hidden' to buttons\n\t\t\t\tthis.wrapper.find(\".grid-add-row, .grid-add-multiple-rows\").addClass(\"hidden\");\n\t\t\t} else {\n\t\t\t\t// show buttons\n\t\t\t\tthis.wrapper.find(\".grid-add-row\").removeClass(\"hidden\");\n\n\t\t\t\tif (this.multiple_set) {\n\t\t\t\t\tthis.wrapper.find(\".grid-add-multiple-rows\").removeClass(\"hidden\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\n\t\t\tthis.grid_rows.length < this.grid_pagination.page_length &&\n\t\t\t!this.df.allow_bulk_edit\n\t\t) {\n\t\t\tthis.wrapper.find(\".grid-footer\").toggle(false);\n\t\t}\n\n\t\tthis.wrapper\n\t\t\t.find(\".grid-add-row, .grid-add-multiple-rows, .grid-upload\")\n\t\t\t.toggle(this.is_editable());\n\t}\n\n\ttruncate_rows() {\n\t\tif (this.grid_rows.length > this.data.length) {\n\t\t\t// remove extra rows\n\t\t\tfor (var i = this.data.length; i < this.grid_rows.length; i++) {\n\t\t\t\tvar grid_row = this.grid_rows[i];\n\t\t\t\tif (grid_row) grid_row.wrapper.remove();\n\t\t\t}\n\t\t\tthis.grid_rows.splice(this.data.length);\n\t\t}\n\t}\n\n\tsetup_fields() {\n\t\t// reset docfield\n\t\tif (this.frm && this.frm.docname) {\n\t\t\t// use doc specific docfield object\n\t\t\tthis.df = frappe.meta.get_docfield(\n\t\t\t\tthis.frm.doctype,\n\t\t\t\tthis.df.fieldname,\n\t\t\t\tthis.frm.docname\n\t\t\t);\n\t\t} else {\n\t\t\t// use non-doc specific docfield\n\t\t\tif (this.df.options) {\n\t\t\t\tthis.df =\n\t\t\t\t\tfrappe.meta.get_docfield(this.df.options, this.df.fieldname) ||\n\t\t\t\t\tthis.df ||\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t}\n\n\t\tif (this.doctype && this.frm) {\n\t\t\tthis.docfields = frappe.meta.get_docfields(this.doctype, this.frm.docname);\n\t\t} else {\n\t\t\t// fields given in docfield\n\t\t\tthis.docfields = this.df.fields;\n\t\t}\n\n\t\tthis.docfields.forEach((df) => {\n\t\t\tthis.fields_map[df.fieldname] = df;\n\t\t});\n\t}\n\n\trefresh_row(docname) {\n\t\tthis.grid_rows_by_docname[docname] && this.grid_rows_by_docname[docname].refresh();\n\t}\n\n\tmake_sortable($rows) {\n\t\tthis.grid_sortable = new Sortable($rows.get(0), {\n\t\t\tgroup: { name: this.df.fieldname },\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".grid-row\",\n\t\t\tanimation: 100,\n\t\t\tfilter: \"li, a\",\n\t\t\tonMove: (event) => {\n\t\t\t\t// don't move if editable\n\t\t\t\tif (!this.is_editable()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// prevent drag behaviour if _sortable property is \"false\"\n\t\t\t\tlet idx = $(event.dragged).closest(\".grid-row\").attr(\"data-idx\");\n\t\t\t\tlet doc = this.data[idx % this.grid_pagination.page_length];\n\t\t\t\tif (doc && doc._sortable === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonUpdate: (event) => {\n\t\t\t\tlet idx = $(event.item).closest(\".grid-row\").attr(\"data-idx\") - 1;\n\t\t\t\tlet doc = this.data[idx % this.grid_pagination.page_length];\n\t\t\t\tthis.renumber_based_on_dom();\n\t\t\t\tthis.frm &&\n\t\t\t\t\tthis.frm.script_manager.trigger(\n\t\t\t\t\t\tthis.df.fieldname + \"_move\",\n\t\t\t\t\t\tthis.df.options,\n\t\t\t\t\t\tdoc.name\n\t\t\t\t\t);\n\t\t\t\tthis.refresh();\n\t\t\t\tthis.frm && this.frm.dirty();\n\t\t\t},\n\t\t});\n\n\t\tthis.frm && $(this.frm.wrapper).trigger(\"grid-make-sortable\", [this.frm]);\n\t}\n\n\tget_data(filter_field) {\n\t\tlet data = [];\n\t\tif (filter_field) {\n\t\t\tdata = this.get_filtered_data();\n\t\t} else {\n\t\t\tdata = this.frm\n\t\t\t\t? this.frm.doc[this.df.fieldname] || []\n\t\t\t\t: this.df.data || this.get_modal_data();\n\t\t}\n\t\treturn data;\n\t}\n\n\tget_filtered_data() {\n\t\tlet all_data = this.frm ? this.frm.doc[this.df.fieldname] : this.df.data;\n\n\t\tif (!all_data) return;\n\n\t\tfor (const field in this.filter) {\n\t\t\tall_data = all_data.filter((data) => {\n\t\t\t\tlet { df, value } = this.filter[field];\n\t\t\t\treturn this.get_data_based_on_fieldtype(df, data, value.toLowerCase());\n\t\t\t});\n\t\t}\n\n\t\treturn all_data;\n\t}\n\n\tget_data_based_on_fieldtype(df, data, value) {\n\t\tlet fieldname = df.fieldname;\n\t\tlet fieldtype = df.fieldtype;\n\t\tlet fieldvalue = data[fieldname];\n\n\t\tif (fieldtype === \"Check\") {\n\t\t\tvalue = frappe.utils.string_to_boolean(value);\n\t\t\treturn Boolean(fieldvalue) === value && data;\n\t\t} else if (fieldtype === \"Sr No\" && data.idx.toString().includes(value)) {\n\t\t\treturn data;\n\t\t} else if (fieldtype === \"Duration\" && fieldvalue) {\n\t\t\tlet formatted_duration = frappe.utils.get_formatted_duration(fieldvalue);\n\n\t\t\tif (formatted_duration.includes(value)) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t} else if (fieldtype === \"Barcode\" && fieldvalue) {\n\t\t\tlet barcode = fieldvalue.startsWith(\"<svg\")\n\t\t\t\t? $(fieldvalue).attr(\"data-barcode-value\")\n\t\t\t\t: fieldvalue;\n\n\t\t\tif (barcode.toLowerCase().includes(value)) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t} else if ([\"Datetime\", \"Date\"].includes(fieldtype) && fieldvalue) {\n\t\t\tlet user_formatted_date = frappe.datetime.str_to_user(fieldvalue);\n\n\t\t\tif (user_formatted_date.includes(value)) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t} else if ([\"Currency\", \"Float\", \"Int\", \"Percent\", \"Rating\"].includes(fieldtype)) {\n\t\t\tlet num = fieldvalue || 0;\n\n\t\t\tif (fieldtype === \"Rating\") {\n\t\t\t\tlet out_of_rating = parseInt(df.options) || 5;\n\t\t\t\tnum = num * out_of_rating;\n\t\t\t}\n\n\t\t\tif (num.toString().indexOf(value) > -1) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t} else if (fieldvalue && fieldvalue.toLowerCase().includes(value)) {\n\t\t\treturn data;\n\t\t}\n\t}\n\n\tget_modal_data() {\n\t\treturn this.df.get_data\n\t\t\t? this.df.get_data().filter((data) => {\n\t\t\t\t\tif (!this.deleted_docs || !this.deleted_docs.includes(data.name)) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t  })\n\t\t\t: [];\n\t}\n\n\tset_column_disp(fieldname, show) {\n\t\tif (Array.isArray(fieldname)) {\n\t\t\tfor (let field of fieldname) {\n\t\t\t\tthis.update_docfield_property(field, \"hidden\", show ? 0 : 1);\n\t\t\t\tthis.set_editable_grid_column_disp(field, show);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.get_docfield(fieldname).hidden = show ? 0 : 1;\n\t\t\tthis.set_editable_grid_column_disp(fieldname, show);\n\t\t}\n\n\t\tthis.debounced_refresh();\n\t}\n\n\tset_editable_grid_column_disp(fieldname, show) {\n\t\t//Hide columns for editable grids\n\t\tif (this.meta.editable_grid && this.grid_rows) {\n\t\t\tthis.grid_rows.forEach((row) => {\n\t\t\t\trow.columns_list.forEach((column) => {\n\t\t\t\t\t//Hide the column specified\n\t\t\t\t\tif (column.df.fieldname == fieldname) {\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tcolumn.df.hidden = false;\n\n\t\t\t\t\t\t\t//Show the static area and hide field area if it is not the editable row\n\t\t\t\t\t\t\tif (row != frappe.ui.form.editable_row) {\n\t\t\t\t\t\t\t\tcolumn.static_area.show();\n\t\t\t\t\t\t\t\tcolumn.field_area && column.field_area.toggle(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Hide the static area and show field area if it is the editable row\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tcolumn.static_area.hide();\n\t\t\t\t\t\t\t\tcolumn.field_area && column.field_area.toggle(true);\n\n\t\t\t\t\t\t\t\t//Format the editable column appropriately if it is now visible\n\t\t\t\t\t\t\t\tif (column.field) {\n\t\t\t\t\t\t\t\t\tcolumn.field.refresh();\n\t\t\t\t\t\t\t\t\tif (column.field.$input)\n\t\t\t\t\t\t\t\t\t\tcolumn.field.$input.toggleClass(\"input-sm\", true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumn.df.hidden = true;\n\t\t\t\t\t\t\tcolumn.static_area.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis.refresh();\n\t}\n\n\ttoggle_reqd(fieldname, reqd) {\n\t\tthis.update_docfield_property(fieldname, \"reqd\", reqd);\n\t\tthis.debounced_refresh();\n\t}\n\n\ttoggle_enable(fieldname, enable) {\n\t\tthis.update_docfield_property(fieldname, \"read_only\", enable ? 0 : 1);\n\t\tthis.debounced_refresh();\n\t}\n\n\ttoggle_display(fieldname, show) {\n\t\tthis.update_docfield_property(fieldname, \"hidden\", show ? 0 : 1);\n\t\tthis.debounced_refresh();\n\t}\n\n\ttoggle_checkboxes(enable) {\n\t\tthis.wrapper.find(\".grid-row-check\").prop(\"disabled\", !enable);\n\t}\n\n\tget_docfield(fieldname) {\n\t\treturn frappe.meta.get_docfield(\n\t\t\tthis.doctype,\n\t\t\tfieldname,\n\t\t\tthis.frm ? this.frm.docname : null\n\t\t);\n\t}\n\n\tget_row(key) {\n\t\tif (typeof key == \"number\") {\n\t\t\tif (key < 0) {\n\t\t\t\treturn this.grid_rows[this.grid_rows.length + key];\n\t\t\t} else {\n\t\t\t\treturn this.grid_rows[key];\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.grid_rows_by_docname[key];\n\t\t}\n\t}\n\n\tget_grid_row(key) {\n\t\treturn this.get_row(key);\n\t}\n\n\tget_field(fieldname) {\n\t\t// Note: workaround for get_query\n\t\tif (!this.fieldinfo[fieldname]) this.fieldinfo[fieldname] = {};\n\t\treturn this.fieldinfo[fieldname];\n\t}\n\n\tset_value(fieldname, value, doc) {\n\t\tif (this.display_status !== \"None\" && doc?.name && this.grid_rows_by_docname?.[doc.name]) {\n\t\t\tthis.grid_rows_by_docname[doc.name].refresh_field(fieldname, value);\n\t\t}\n\t}\n\n\tsetup_add_row() {\n\t\tthis.wrapper.find(\".grid-add-row\").click(() => {\n\t\t\tthis.add_new_row(null, null, true, null, true);\n\t\t\tthis.set_focus_on_row();\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tadd_new_row(idx, callback, show, copy_doc, go_to_last_page = false, go_to_first_page = false) {\n\t\tif (this.is_editable()) {\n\t\t\tif (go_to_last_page) {\n\t\t\t\tthis.grid_pagination.go_to_last_page_to_add_row();\n\t\t\t} else if (go_to_first_page) {\n\t\t\t\tthis.grid_pagination.go_to_page(1);\n\t\t\t}\n\n\t\t\tif (this.frm) {\n\t\t\t\tvar d = frappe.model.add_child(\n\t\t\t\t\tthis.frm.doc,\n\t\t\t\t\tthis.df.options,\n\t\t\t\t\tthis.df.fieldname,\n\t\t\t\t\tidx\n\t\t\t\t);\n\t\t\t\tif (copy_doc) {\n\t\t\t\t\td = this.duplicate_row(d, copy_doc);\n\t\t\t\t}\n\t\t\t\td.__unedited = true;\n\t\t\t\tthis.frm.script_manager.trigger(this.df.fieldname + \"_add\", d.doctype, d.name);\n\t\t\t\tthis.refresh();\n\t\t\t} else {\n\t\t\t\tif (!this.df.data) {\n\t\t\t\t\tthis.df.data = this.get_data() || [];\n\t\t\t\t}\n\t\t\t\tconst defaults = this.docfields.reduce((acc, d) => {\n\t\t\t\t\tacc[d.fieldname] = d.default;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {});\n\n\t\t\t\tconst row_idx = this.df.data.length + 1;\n\t\t\t\tthis.df.data.push({ idx: row_idx, __islocal: true, ...defaults });\n\t\t\t\tthis.df.on_add_row && this.df.on_add_row(row_idx);\n\t\t\t\tthis.refresh();\n\t\t\t}\n\n\t\t\tif (show) {\n\t\t\t\tif (idx) {\n\t\t\t\t\t// always open inserted rows\n\t\t\t\t\tthis.wrapper\n\t\t\t\t\t\t.find(\"[data-idx='\" + idx + \"']\")\n\t\t\t\t\t\t.data(\"grid_row\")\n\t\t\t\t\t\t.toggle_view(true, callback);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.allow_on_grid_editing()) {\n\t\t\t\t\t\t// open last row only if on-grid-editing is disabled\n\t\t\t\t\t\tthis.wrapper\n\t\t\t\t\t\t\t.find(\".grid-row:last\")\n\t\t\t\t\t\t\t.data(\"grid_row\")\n\t\t\t\t\t\t\t.toggle_view(true, callback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn d;\n\t\t}\n\t}\n\n\trenumber_based_on_dom() {\n\t\t// renumber based on dom\n\t\tlet $rows = $(this.parent).find(\".rows\");\n\n\t\t$rows.find(\".grid-row\").each((i, item) => {\n\t\t\tlet $item = $(item);\n\t\t\tlet index =\n\t\t\t\t(this.grid_pagination.page_index - 1) * this.grid_pagination.page_length + i;\n\t\t\tlet d = this.grid_rows_by_docname[$item.attr(\"data-name\")].doc;\n\t\t\td.idx = index + 1;\n\t\t\t$item.attr(\"data-idx\", d.idx);\n\n\t\t\tif (this.frm) this.frm.doc[this.df.fieldname][index] = d;\n\t\t\tthis.data[index] = d;\n\t\t\tthis.grid_rows[index] = this.grid_rows_by_docname[d.name];\n\t\t});\n\t}\n\n\tduplicate_row(d, copy_doc) {\n\t\t$.each(copy_doc, function (key, value) {\n\t\t\tif (\n\t\t\t\t![\n\t\t\t\t\t\"creation\",\n\t\t\t\t\t\"modified\",\n\t\t\t\t\t\"modified_by\",\n\t\t\t\t\t\"idx\",\n\t\t\t\t\t\"owner\",\n\t\t\t\t\t\"parent\",\n\t\t\t\t\t\"doctype\",\n\t\t\t\t\t\"name\",\n\t\t\t\t\t\"parentfield\",\n\t\t\t\t].includes(key)\n\t\t\t) {\n\t\t\t\td[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn d;\n\t}\n\n\tset_focus_on_row(idx) {\n\t\tif (!idx && idx !== 0) {\n\t\t\tidx = this.grid_rows.length - 1;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tthis.grid_rows[idx].row\n\t\t\t\t.find('input[type=\"Text\"],textarea,select')\n\t\t\t\t.filter(\":visible:first\")\n\t\t\t\t.focus();\n\t\t}, 100);\n\t}\n\n\tsetup_visible_columns() {\n\t\tif (this.visible_columns && this.visible_columns.length > 0) return;\n\n\t\tthis.user_defined_columns = [];\n\t\tthis.setup_user_defined_columns();\n\t\tvar total_colsize = 1,\n\t\t\tfields =\n\t\t\t\tthis.user_defined_columns && this.user_defined_columns.length > 0\n\t\t\t\t\t? this.user_defined_columns\n\t\t\t\t\t: this.editable_fields || this.docfields;\n\n\t\tthis.visible_columns = [];\n\n\t\tfor (var ci in fields) {\n\t\t\tvar _df = fields[ci];\n\n\t\t\t// get docfield if from fieldname\n\t\t\tdf =\n\t\t\t\tthis.user_defined_columns && this.user_defined_columns.length > 0\n\t\t\t\t\t? _df\n\t\t\t\t\t: this.fields_map[_df.fieldname];\n\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\t!df.hidden &&\n\t\t\t\t(this.editable_fields || df.in_list_view) &&\n\t\t\t\t((this.frm && this.frm.get_perm(df.permlevel, \"read\")) || !this.frm) &&\n\t\t\t\t!frappe.model.layout_fields.includes(df.fieldtype)\n\t\t\t) {\n\t\t\t\tif (df.columns) {\n\t\t\t\t\tdf.colsize = df.columns;\n\t\t\t\t} else {\n\t\t\t\t\tthis.update_default_colsize(df);\n\t\t\t\t}\n\n\t\t\t\t// attach formatter on refresh\n\t\t\t\tif (\n\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t!df.formatter &&\n\t\t\t\t\tdf.parent &&\n\t\t\t\t\tfrappe.meta.docfield_map[df.parent]\n\t\t\t\t) {\n\t\t\t\t\tconst docfield = frappe.meta.docfield_map[df.parent][df.fieldname];\n\t\t\t\t\tif (docfield && docfield.formatter) {\n\t\t\t\t\t\tdf.formatter = docfield.formatter;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttotal_colsize += df.colsize;\n\t\t\t\tthis.visible_columns.push([df, df.colsize]);\n\t\t\t}\n\t\t}\n\n\t\t// redistribute if total-col size is less than 12\n\t\tvar passes = 0;\n\t\twhile (total_colsize < 11 && passes < 12) {\n\t\t\tfor (var i in this.visible_columns) {\n\t\t\t\tvar df = this.visible_columns[i][0];\n\t\t\t\tvar colsize = this.visible_columns[i][1];\n\t\t\t\tif (colsize > 1 && colsize < 11 && frappe.model.is_non_std_field(df.fieldname)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpasses < 3 &&\n\t\t\t\t\t\t[\"Int\", \"Currency\", \"Float\", \"Check\", \"Percent\"].indexOf(df.fieldtype) !==\n\t\t\t\t\t\t\t-1\n\t\t\t\t\t) {\n\t\t\t\t\t\t// don't increase col size of these fields in first 3 passes\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.visible_columns[i][1] += 1;\n\t\t\t\t\ttotal_colsize++;\n\t\t\t\t}\n\n\t\t\t\tif (total_colsize > 10) break;\n\t\t\t}\n\t\t\tpasses++;\n\t\t}\n\t}\n\n\tupdate_default_colsize(df) {\n\t\tvar colsize = 2;\n\t\tswitch (df.fieldtype) {\n\t\t\tcase \"Text\":\n\t\t\t\tbreak;\n\t\t\tcase \"Small Text\":\n\t\t\t\tcolsize = 3;\n\t\t\t\tbreak;\n\t\t\tcase \"Check\":\n\t\t\t\tcolsize = 1;\n\t\t}\n\t\tdf.colsize = colsize;\n\t}\n\n\tsetup_user_defined_columns() {\n\t\tif (!this.frm) return;\n\n\t\tlet user_settings = frappe.get_user_settings(this.frm.doctype, \"GridView\");\n\t\tif (user_settings && user_settings[this.doctype] && user_settings[this.doctype].length) {\n\t\t\tthis.user_defined_columns = user_settings[this.doctype]\n\t\t\t\t.map((row) => {\n\t\t\t\t\tlet column = frappe.meta.get_docfield(this.doctype, row.fieldname);\n\n\t\t\t\t\tif (column) {\n\t\t\t\t\t\tcolumn.in_list_view = 1;\n\t\t\t\t\t\tcolumn.columns = row.columns;\n\t\t\t\t\t\treturn column;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter(Boolean);\n\t\t}\n\t}\n\n\tis_editable() {\n\t\treturn this.display_status == \"Write\" && !this.static_rows;\n\t}\n\n\tis_sortable() {\n\t\treturn this.sortable_status || this.is_editable();\n\t}\n\n\tonly_sortable(status) {\n\t\tif (status === undefined ? true : status) {\n\t\t\tthis.sortable_status = true;\n\t\t\tthis.static_rows = true;\n\t\t}\n\t}\n\n\tset_multiple_add(link, qty) {\n\t\tif (this.multiple_set) return;\n\n\t\tvar link_field = frappe.meta.get_docfield(this.df.options, link);\n\t\tvar btn = $(this.wrapper).find(\".grid-add-multiple-rows\");\n\n\t\t// show button\n\t\tbtn.removeClass(\"hidden\");\n\n\t\t// open link selector on click\n\t\tbtn.on(\"click\", () => {\n\t\t\tnew frappe.ui.form.LinkSelector({\n\t\t\t\tdoctype: link_field.options,\n\t\t\t\tfieldname: link,\n\t\t\t\tqty_fieldname: qty,\n\t\t\t\tget_query: link_field.get_query,\n\t\t\t\ttarget: this,\n\t\t\t\ttxt: \"\",\n\t\t\t});\n\t\t\tthis.grid_pagination.go_to_last_page_to_add_row();\n\t\t\treturn false;\n\t\t});\n\t\tthis.multiple_set = true;\n\t}\n\n\tsetup_allow_bulk_edit() {\n\t\tlet me = this;\n\t\tif (this.frm && this.frm.get_docfield(this.df.fieldname)?.allow_bulk_edit) {\n\t\t\t// download\n\t\t\tthis.setup_download();\n\n\t\t\tconst value_formatter_map = {\n\t\t\t\tDate: (val) => (val ? frappe.datetime.user_to_str(val) : val),\n\t\t\t\tInt: (val) => cint(val),\n\t\t\t\tCheck: (val) => cint(val),\n\t\t\t\tFloat: (val) => flt(val),\n\t\t\t\tCurrency: (val) => flt(val),\n\t\t\t};\n\n\t\t\t// upload\n\t\t\tfrappe.flags.no_socketio = true;\n\t\t\t$(this.wrapper)\n\t\t\t\t.find(\".grid-upload\")\n\t\t\t\t.removeClass(\"hidden\")\n\t\t\t\t.on(\"click\", () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tas_dataurl: true,\n\t\t\t\t\t\tallow_multiple: false,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".csv\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success(file) {\n\t\t\t\t\t\t\tvar data = frappe.utils.csv_to_array(\n\t\t\t\t\t\t\t\tfrappe.utils.get_decoded_string(file.dataurl)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// row #2 contains fieldnames;\n\t\t\t\t\t\t\tvar fieldnames = data[2];\n\t\t\t\t\t\t\tme.frm.clear_table(me.df.fieldname);\n\t\t\t\t\t\t\t$.each(data, (i, row) => {\n\t\t\t\t\t\t\t\tif (i > 6) {\n\t\t\t\t\t\t\t\t\tvar blank_row = true;\n\t\t\t\t\t\t\t\t\t$.each(row, function (ci, value) {\n\t\t\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\t\t\tblank_row = false;\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tif (!blank_row) {\n\t\t\t\t\t\t\t\t\t\tvar d = me.frm.add_child(me.df.fieldname);\n\t\t\t\t\t\t\t\t\t\t$.each(row, (ci, value) => {\n\t\t\t\t\t\t\t\t\t\t\tvar fieldname = fieldnames[ci];\n\t\t\t\t\t\t\t\t\t\t\tvar df = frappe.meta.get_docfield(\n\t\t\t\t\t\t\t\t\t\t\t\tme.df.options,\n\t\t\t\t\t\t\t\t\t\t\t\tfieldname\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (df) {\n\t\t\t\t\t\t\t\t\t\t\t\td[fieldnames[ci]] = value_formatter_map[\n\t\t\t\t\t\t\t\t\t\t\t\t\tdf.fieldtype\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t? value_formatter_map[df.fieldtype](value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t: value;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tme.frm.refresh_field(me.df.fieldname);\n\t\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\t\tmessage: __(\"Table updated\"),\n\t\t\t\t\t\t\t\ttitle: __(\"Success\"),\n\t\t\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\t}\n\n\tsetup_download() {\n\t\tlet title = this.df.label || frappe.model.unscrub(this.df.fieldname);\n\t\t$(this.wrapper)\n\t\t\t.find(\".grid-download\")\n\t\t\t.removeClass(\"hidden\")\n\t\t\t.on(\"click\", () => {\n\t\t\t\tvar data = [];\n\t\t\t\tvar docfields = [];\n\t\t\t\tdata.push([__(\"Bulk Edit {0}\", [title])]);\n\t\t\t\tdata.push([]);\n\t\t\t\tdata.push([]);\n\t\t\t\tdata.push([]);\n\t\t\t\tdata.push([__(\"The CSV format is case sensitive\")]);\n\t\t\t\tdata.push([__(\"Do not edit headers which are preset in the template\")]);\n\t\t\t\tdata.push([\"------\"]);\n\t\t\t\t$.each(frappe.get_meta(this.df.options).fields, (i, df) => {\n\t\t\t\t\t// don't include the read-only field in the template\n\t\t\t\t\tif (frappe.model.is_value_type(df.fieldtype)) {\n\t\t\t\t\t\tdata[1].push(df.label);\n\t\t\t\t\t\tdata[2].push(df.fieldname);\n\t\t\t\t\t\tlet description = (df.description || \"\") + \" \";\n\t\t\t\t\t\tif (df.fieldtype === \"Date\") {\n\t\t\t\t\t\t\tdescription += frappe.boot.sysdefaults.date_format;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata[3].push(description);\n\t\t\t\t\t\tdocfields.push(df);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// add data\n\t\t\t\t$.each(this.frm.doc[this.df.fieldname] || [], (i, d) => {\n\t\t\t\t\tvar row = [];\n\t\t\t\t\t$.each(data[2], (i, fieldname) => {\n\t\t\t\t\t\tvar value = d[fieldname];\n\n\t\t\t\t\t\t// format date\n\t\t\t\t\t\tif (docfields[i].fieldtype === \"Date\" && value) {\n\t\t\t\t\t\t\tvalue = frappe.datetime.str_to_user(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trow.push(value || \"\");\n\t\t\t\t\t});\n\t\t\t\t\tdata.push(row);\n\t\t\t\t});\n\n\t\t\t\tfrappe.tools.downloadify(data, null, title);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n\n\tadd_custom_button(label, click, position = \"bottom\") {\n\t\t// add / unhide a custom button\n\t\tconst $wrapper = position === \"top\" ? this.grid_custom_buttons : this.grid_buttons;\n\t\tlet $btn = this.custom_buttons[label];\n\t\tif (!$btn) {\n\t\t\t$btn = $(`<button type=\"button\" class=\"btn btn-secondary btn-xs btn-custom\">`)\n\t\t\t\t.html(__(label))\n\t\t\t\t.prependTo($wrapper)\n\t\t\t\t.on(\"click\", click);\n\t\t\tthis.custom_buttons[label] = $btn;\n\t\t} else {\n\t\t\t$btn.removeClass(\"hidden\");\n\t\t}\n\t\treturn $btn;\n\t}\n\n\tclear_custom_buttons() {\n\t\t// hide all custom buttons\n\t\tthis.grid_buttons.find(\".btn-custom\").addClass(\"hidden\");\n\t}\n\n\tupdate_docfield_property(fieldname, property, value) {\n\t\t// update the docfield of each row\n\t\tif (!this.grid_rows) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let row of this.grid_rows) {\n\t\t\tlet docfield = row?.docfields?.find((d) => d.fieldname === fieldname);\n\t\t\tif (docfield) {\n\t\t\t\tdocfield[property] = value;\n\t\t\t} else {\n\t\t\t\tthrow `field ${fieldname} not found`;\n\t\t\t}\n\t\t}\n\n\t\t// update the parent too (for new rows)\n\t\tthis.docfields.find((d) => d.fieldname === fieldname)[property] = value;\n\n\t\tif (this.user_defined_columns && this.user_defined_columns.length > 0) {\n\t\t\tlet field = this.user_defined_columns.find((d) => d.fieldname === fieldname);\n\t\t\tif (field && Object.keys(field).includes(property)) {\n\t\t\t\tfield[property] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis.debounced_refresh();\n\t}\n}", "import GridRow from './grid_row';\nimport Grid from './grid';\n\nclass Custom_GridRow extends GridRow {\n\n\tvalidate_columns_width() {\n\t\tlet total_column_width = 0.0;\n\n\t\tthis.selected_columns_for_grid.forEach((row) => {\n\t\t\tif (row.columns && row.columns > 0) {\n\t\t\t\ttotal_column_width += cint(row.columns);\n\t\t\t}\n\t\t});\n\n\t\t// if (total_column_width && total_column_width > 10) {\n\t\t// \tfrappe.throw(__(\"The total column width cannot be more than 10.\"));\n\t\t// }\n\t}\n\n\t// show_form() {\n\t// \tsuper.show_form()\n\n\t// \t$(this.grid.form_grid).removeClass(\"relative-important\");\n\t// }\n\t// hide_form() {\n\t// \tsuper.hide_form()\n\n\t// \t$(this.grid.form_grid).addClass(\"relative-important\");\n\t// }\n}\n\n\nclass Custom_Grid extends Grid {\n\n\tmake() {\n\t\tlet template = `\n\t\t\t<div class=\"grid-field\">\n\t\t\t\t<label class=\"control-label\">${__(this.df.label || \"\")}</label>\n\t\t\t\t<span class=\"help\"></span>\n\t\t\t\t<p class=\"text-muted small grid-description\"></p>\n\t\t\t\t<div class=\"grid-custom-buttons\"></div>\n\t\t\t\t<div class=\"form-grid-container\">\n\t\t\t\t\t<div class=\"form-grid\">\n\t\t\t\t\t\t<div class=\"grid-heading-row\"></div>\n\t\t\t\t\t\t<div class=\"grid-body\">\n\t\t\t\t\t\t\t<div class=\"rows\"></div>\n\t\t\t\t\t\t\t<div class=\"grid-empty text-center\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc=\"/assets/frappe/images/ui-states/grid-empty-state.svg\"\n\t\t\t\t\t\t\t\t\talt=\"Grid Empty State\"\n\t\t\t\t\t\t\t\t\tclass=\"grid-empty-illustration\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t${__(\"No Data\")}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"small form-clickable-section grid-footer\">\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<div class=\"grid-buttons\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-danger grid-remove-rows hidden\"\n\t\t\t\t\t\t\t\tdata-action=\"delete_rows\">\n\t\t\t\t\t\t\t\t${__(\"Delete\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-danger grid-remove-all-rows hidden\"\n\t\t\t\t\t\t\t\tdata-action=\"delete_all_rows\">\n\t\t\t\t\t\t\t\t${__(\"Delete All\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<!-- hack to allow firefox include this in tabs -->\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-secondary grid-add-row\">\n\t\t\t\t\t\t\t\t${__(\"Add Row\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-add-multiple-rows btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Add Multiple\")}</a>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"grid-pagination\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"grid-bulk-actions text-right\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-download btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Download\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"grid-upload btn btn-xs btn-secondary hidden\">\n\t\t\t\t\t\t\t\t${__(\"Upload\")}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.wrapper = $(template).appendTo(this.parent);\n\t\t$(this.parent).addClass(\"form-group\");\n\t\tthis.set_grid_description();\n\t\tthis.set_doc_url();\n\n\t\tfrappe.utils.bind_actions_with_object(this.wrapper, this);\n\n\t\tthis.form_grid = this.wrapper.find(\".form-grid\");\n\n\n\t\t// enhance slider changes\n\t\t// this.form_grid.addClass(\"relative-important\");\n\t\tthis.form_grid_container = this.wrapper.find(\".form-grid-container\");\n\t\t// this.enhanced_slider = this.wrapper.find(\".enhanced-slider\");\n\t\t// this.enhanced_slider.css(\"display\", \"none\");\n\t\tlet me = this\n\t\t// this.enhanced_slider.on(\"input\", function (event) {\n\t\t// \tconst value = event.target.value;\n\t\t// \tme.form_grid.css(\"left\", `-${value}px`)\n\t\t// \tme.setup_scrollable_width()\n\t\t// })\n\n\n\n\n\n\t\tthis.setup_add_row();\n\n\t\tthis.setup_grid_pagination();\n\n\t\tthis.custom_buttons = {};\n\t\tthis.grid_buttons = this.wrapper.find(\".grid-buttons\");\n\t\tthis.grid_custom_buttons = this.wrapper.find(\".grid-custom-buttons\");\n\t\tthis.remove_rows_button = this.grid_buttons.find(\".grid-remove-rows\");\n\t\tthis.remove_all_rows_button = this.grid_buttons.find(\".grid-remove-all-rows\");\n\n\t\tthis.setup_allow_bulk_edit();\n\t\tthis.setup_check();\n\t\tif (this.df.on_setup) {\n\t\t\tthis.df.on_setup(this);\n\t\t}\n\n\n\t}\n\n\tmake_head() {\n\t\tif (this.prevent_build) return;\n\n\t\t// labels\n\t\tif (this.header_row) {\n\t\t\t$(this.parent).find(\".grid-heading-row .grid-row\").remove();\n\t\t}\n\t\t// implement custom class\n\t\tthis.header_row = new Custom_GridRow({\n\t\t\tparent: $(this.parent).find(\".grid-heading-row\"),\n\t\t\tparent_df: this.df,\n\t\t\tdocfields: this.docfields,\n\t\t\tfrm: this.frm,\n\t\t\tgrid: this,\n\t\t\tconfigure_columns: true,\n\t\t});\n\t\t// implement custom class\n\t\tthis.header_search = new Custom_GridRow({\n\t\t\tparent: $(this.parent).find(\".grid-heading-row\"),\n\t\t\tparent_df: this.df,\n\t\t\tdocfields: this.docfields,\n\t\t\tfrm: this.frm,\n\t\t\tgrid: this,\n\t\t\tshow_search: true,\n\t\t});\n\t\tthis.header_search.row.addClass(\"filter-row\");\n\t\tif (this.header_search.show_search || this.header_search.show_search_row()) {\n\t\t\t$(this.parent).find(\".grid-heading-row\").addClass(\"with-filter\");\n\t\t} else {\n\t\t\t$(this.parent).find(\".grid-heading-row\").removeClass(\"with-filter\");\n\t\t}\n\n\t\tthis.filter_applied && this.update_search_columns();\n\t}\n\n\trender_result_rows($rows, append_row) {\n\t\tlet result_length = this.grid_pagination.get_result_length();\n\t\tlet page_index = this.grid_pagination.page_index;\n\t\tlet page_length = this.grid_pagination.page_length;\n\t\tif (!this.grid_rows) {\n\t\t\treturn;\n\t\t}\n\t\tfor (var ri = (page_index - 1) * page_length; ri < result_length; ri++) {\n\t\t\tvar d = this.data[ri];\n\t\t\tif (!d) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (d.idx === undefined) {\n\t\t\t\td.idx = ri + 1;\n\t\t\t}\n\t\t\tif (d.name === undefined) {\n\t\t\t\td.name = \"row \" + d.idx;\n\t\t\t}\n\t\t\tlet grid_row;\n\t\t\tif (this.grid_rows[ri] && !append_row) {\n\t\t\t\tgrid_row = this.grid_rows[ri];\n\t\t\t\tgrid_row.doc = d;\n\t\t\t\tgrid_row.refresh();\n\t\t\t} else {\n\t\t\t\t// implement custom class\n\t\t\t\tgrid_row = new Custom_GridRow({\n\t\t\t\t\tparent: $rows,\n\t\t\t\t\tparent_df: this.df,\n\t\t\t\t\tdocfields: this.docfields,\n\t\t\t\t\tdoc: d,\n\t\t\t\t\tfrm: this.frm,\n\t\t\t\t\tgrid: this,\n\t\t\t\t});\n\t\t\t\tthis.grid_rows[ri] = grid_row;\n\t\t\t}\n\n\t\t\tthis.grid_rows_by_docname[d.name] = grid_row;\n\t\t}\n\t}\n\n\tsetup_visible_columns() {\n\t\tif (this.visible_columns && this.visible_columns.length > 0) return;\n\n\t\tthis.user_defined_columns = [];\n\t\tthis.setup_user_defined_columns();\n\t\tvar total_colsize = 1,\n\t\t\tfields =\n\t\t\t\tthis.user_defined_columns && this.user_defined_columns.length > 0\n\t\t\t\t\t? this.user_defined_columns\n\t\t\t\t\t: this.editable_fields || this.docfields;\n\n\t\tthis.visible_columns = [];\n\n\t\tfor (var ci in fields) {\n\t\t\tvar _df = fields[ci];\n\n\t\t\t// get docfield if from fieldname\n\t\t\tdf =\n\t\t\t\tthis.user_defined_columns && this.user_defined_columns.length > 0\n\t\t\t\t\t? _df\n\t\t\t\t\t: this.fields_map[_df.fieldname];\n\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\t!df.hidden &&\n\t\t\t\t(this.editable_fields || df.in_list_view) &&\n\t\t\t\t((this.frm && this.frm.get_perm(df.permlevel, \"read\")) || !this.frm) &&\n\t\t\t\t!frappe.model.layout_fields.includes(df.fieldtype)\n\t\t\t) {\n\t\t\t\tif (df.columns) {\n\t\t\t\t\tdf.colsize = df.columns;\n\t\t\t\t} else {\n\t\t\t\t\tthis.update_default_colsize(df);\n\t\t\t\t}\n\n\t\t\t\t// attach formatter on refresh\n\t\t\t\tif (\n\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t!df.formatter &&\n\t\t\t\t\tdf.parent &&\n\t\t\t\t\tfrappe.meta.docfield_map[df.parent]\n\t\t\t\t) {\n\t\t\t\t\tconst docfield = frappe.meta.docfield_map[df.parent][df.fieldname];\n\t\t\t\t\tif (docfield && docfield.formatter) {\n\t\t\t\t\t\tdf.formatter = docfield.formatter;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttotal_colsize += df.colsize;\n\t\t\t\tif (total_colsize > 100) return false; // Increased limit to 20\n\t\t\t\tthis.visible_columns.push([df, df.colsize]);\n\t\t\t}\n\n\t\t}\n\n\t\t// redistribute if total-col size is less than 12\n\t\tvar passes = 0;\n\t\twhile (total_colsize < 11 && passes < 12) { // Adjusted loop conditions\n\t\t\tfor (var i in this.visible_columns) {\n\t\t\t\tvar df = this.visible_columns[i][0];\n\t\t\t\tvar colsize = this.visible_columns[i][1];\n\t\t\t\tif (colsize > 1 && colsize < 11 && frappe.model.is_non_std_field(df.fieldname)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpasses < 3 &&\n\t\t\t\t\t\t[\"Int\", \"Currency\", \"Float\", \"Check\", \"Percent\"].indexOf(df.fieldtype) !==\n\t\t\t\t\t\t-1\n\t\t\t\t\t) {\n\t\t\t\t\t\t// don't increase col size of these fields in first 3 passes\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.visible_columns[i][1] += 1;\n\t\t\t\t\ttotal_colsize++;\n\t\t\t\t}\n\n\t\t\t\tif (total_colsize > 10) break;\n\t\t\t}\n\t\t\tpasses++;\n\t\t}\n\n\t\t// set width of scrollable area\n\t\tthis.setup_scrollable_width()\n\t\tthis.verify_overflow_columns_width()\n\t}\n\n\n\tsetup_scrollable_width() {\n\t\tlet width = 200\n\t\tthis.visible_columns.forEach(column => {\n\t\t\twidth += column[1] * 50 + 100\n\t\t});\n\t\t// if (width > this.form_grid_container[0].clientWidth) {\n\t\t// \tthis.enhanced_slider.prop(\"max\", width - this.form_grid_container[0].clientWidth)\n\t\t// \tthis.enhanced_slider.prop(\"style\", \"display:block\")\n\t\t// } else {\n\t\t// \tthis.form_grid.css(\"left\", `0px`)\n\t\t// \tthis.enhanced_slider.prop(\"max\", this.form_grid_container[0].clientWidth)\n\t\t// \tthis.enhanced_slider.prop(\"style\", \"display:none\")\n\t\t// \tthis.enhanced_slider.prop(\"value\", 0)\n\t\t// }\n\t}\n\n\tverify_overflow_columns_width() {\n\t\tlet width = 200\n\t\tthis.visible_columns.forEach(column => {\n\t\t\twidth += column[1] * 50 + 100\n\t\t});\n\n\t\t// if (width > this.form_grid_container[0].clientWidth) {\n\t\t// \tthis.form_grid_container.addClass('enhanced-grid-container')\n\t\t// \tthis.enhanced_slider.prop(\"style\", \"display:block\")\n\t\t// } else {\n\t\t// \tthis.enhanced_slider.prop(\"style\", \"display:none\")\n\t\t// \tthis.enhanced_slider.prop(\"value\", 0)\n\t\t// }\n\t}\n\n}\n\n\nfrappe.ui.form.ControlTable = class CustomControlTable extends frappe.ui.form.ControlTable {\n\tmake() {\n\t\tsuper.make();\n\n\t\t// add title if prev field is not column / section heading or html\n\t\tthis.grid = new Custom_Grid({\n\t\t\tfrm: this.frm,\n\t\t\tdf: this.df,\n\t\t\tparent: this.wrapper,\n\t\t\tcontrol: this,\n\t\t});\n\n\t}\n\n\n\n}"],
  "mappings": "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",
  "names": ["input_in_focus", "grid_container", "d", "i"]
}
